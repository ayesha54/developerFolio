{"status":"ok","feed":{"url":"https://medium.com/feed/@akaleem306","title":"Stories by Ayesha Kaleem on Medium","link":"https://medium.com/@akaleem306?source=rss-8ce4e10c19af------2","author":"","description":"Stories by Ayesha Kaleem on Medium","image":"https://cdn-images-1.medium.com/fit/c/150/150/1*q9wfH01IX5EOIjQpZvq_sA.jpeg"},"items":[{"title":"OKD: The Community Distribution of Kubernetes that powers Red Hat\u2019s OpenShift","pubDate":"2022-01-31 22:14:36","link":"https://akaleem306.medium.com/okd-the-community-distribution-of-kubernetes-that-powers-red-hats-openshift-58a0be9e39d1?source=rss-8ce4e10c19af------2","guid":"https://medium.com/p/58a0be9e39d1","author":"Ayesha Kaleem","thumbnail":"https://cdn-images-1.medium.com/max/1024/1*B78USpQOCsk43PUD0c9jlQ.png","description":"\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*B78USpQOCsk43PUD0c9jlQ.png\"></figure><p><em>OKD</em> is the community distribution of <a href=\"https://kubernetes.io/\">Kubernetes</a> optimized for continuous application development and multi-tenant deployment. OKD adds developer and operations-centric tools on top of Kubernetes to enable rapid application development, easy deployment and scaling, and long-term lifecycle maintenance for small and large teams. <em>OKD</em> is also referred to as <em>Origin</em> in github and in the documentation. <em>OKD</em> makes launching Kubernetes on any cloud or bare metal a snap, simplifies running and updating clusters, and provides all of the tools to make your containerized-applications succeed.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*TaqmrENuhiEZEL8DzS8oJw.png\"></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*jY5-NnEH4AURnp6Mb7X1Lg.jpeg\"></figure><h3><strong>Operators</strong></h3>\n<p>Operator automates what Kubernetes does on the behalf of a\u00a0user.</p>\n<p>An operator extends the Kubernetes functionality to automate the management of the entire life cycle of a particular application.</p>\n<p>it\u2019s a custom Kubernetes controller that uses custom resources (CR) to manage applications and their components.</p>\n<p>Operator SDK is basically a framework to build an operator using Golang, helm and\u00a0Ansible</p>\n<h3>Operators all the way\u00a0down</h3>\n<p>Openshift has been built leveraging the operators which manages the application but the cluster itself, for example establishing a cluster on autopilot, where cluster is managing itself by using the following operators:</p>\n<h4>Cluster Version\u00a0Operator</h4>\n<p>The main operator is Cluster Version Operator, it basically make sure that all the essential/core operators are present which I am gonna discuss in this slide. CVO operator also maintains and updates the versions of the core operators.</p>\n<h4>Kube-apiserver, kube-controller-manager, kube-scheduler, etcd:</h4>\n<p>these operators ensures the core components of Kubernetes are configured for a\u00a0cluster.</p>\n<h4>Cluster Network\u00a0Operator</h4>\n<p>The Cluster Network Operator installs and upgrades the networking components on an OpenShift Kubernetes cluster.</p>\n<p>It follows the Controller pattern: it reconciles the state of the cluster against a desired configuration which includes ensuring if the CNI plugins are installed and SDN is configured</p>\n<p>In OpenShift, the Cluster Network Operator runs very early in the install process\u200a\u2014\u200awhile the boostrap API server is still\u00a0running.</p>\n<h4>OpenShift Ingress\u00a0Operator</h4>\n<p>Ingress Operator is an OpenShift component which enables external access to cluster services by configuring Ingress Controllers, and ensures if the routes are\u00a0setup</p>\n<p>Ingress Operator implements the OpenShift ingresscontroller API.</p>\n<h4>image Registry\u00a0Operator</h4>\n<p>It manages all configuration of the Openshift registry including creating\u00a0storage.</p>\n<p>On initial startup the operator will create a default image-registry resource instance based on configuration detected in the cluster (e.g. what cloud storage type to use based on the cloud provider).</p>\n<p>If insufficient information is available to define a complete image-registry resource, the incomplete resource will be defined and the operator will update the resource status with information about what is\u00a0missing.</p>\n<h4>Cluster Monitoring Operator</h4>\n<p>The Cluster Monitoring Operator manages and updates the Prometheus-based cluster monitoring stack deployed on top of OpenShift.</p>\n<h3>OperatorHub.io</h3>\n<p><a href=\"http://operatorhub.io/\">OperatorHub.io</a> is a new home for the Kubernetes community to share Operators.</p>\n<h4>Operator Lifecycle Manager</h4>\n<p>OLM is like CVO for all the OperatorHub\u2019s/optional operators</p>\n<p>Operator Lifecycle Manager (OLM) helps users to install, update, and manage the lifecycle of Kubernetes Operators and it takes care of operator scope (cluster-wide or namespace only), ensures it can be updated manually and manages permissions to use and install operators for the openshift cluster</p>\n<p>OperatorHub is integrated in OpenShift console, so developers can install operators via self-service interface.</p>\n<p>for example\u00a0: Storage (operators based on Rook.io), pipelines operators based on Tekton, Argo CD, KubeVirt, Grafana and many\u00a0more.</p>\n<h3>The State of OKD Today and\u00a0Tomorrow</h3>\n<ul>\n<li>Current Stable Release\u00a04.9</li>\n<li>Documentation Sub-Working Group</li>\n<li>Virtualization Sub-Working Group</li>\n<li>crun, cgroupsv2</li>\n<li>Coming Soon: OKD Operator\u00a0Catalog</li>\n<li>Coming Soon: OKD for\u00a0ARM64</li>\n</ul>\n<h3>OKD Working\u00a0Group</h3>\n<h4>Slack</h4>\n<p><strong>#openshift-users</strong> on<strong> kubernetes.slack.com</strong></p>\n<h4>Issue Tracker</h4>\n<p>github.com/openshift/okd</p>\n<p><strong>Bi-weekly Video Conference Meetings</strong><br>apps.fedoraproject.org/calendar/okd</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*isDRGZhWtXFYTTRO8qX4Ww.png\"></figure><h3>Fedora CoreOS Working\u00a0Group</h3>\n<h4>IRC /\u00a0Matrix</h4>\n<p><strong>#fedora-coreos</strong> on Libera.chat</p>\n<h4>Issue Tracker</h4>\n<p>github.com/coreos/fedora-coreos-tracker</p>\n<h4><strong>Weekly Meetings</strong></h4>\n<p>apps.fedoraproject.org/calendar/CoreOS/</p>\n<h3>OKD Installation on Vmware Vpshere/Any Other\u00a0Cloud</h3>\n<p>Download the openshift client and openshift-install for\u00a0OKD</p>\n<blockquote>wget <a href=\"https://github.com/openshift/okd/releases/download/4.9.0-0.okd-2022-01-14-230113/openshift-client-linux-4.9.0-0.okd-2022-01-14-230113.tar.gz\">https://github.com/openshift/okd/releases/download/4.9.0-0.okd-2022-01-14-230113/openshift-client-linux-4.9.0-0.okd-2022-01-14-230113.tar.gz</a>\n</blockquote>\n<blockquote>wget <a href=\"https://github.com/openshift/okd/releases/download/4.9.0-0.okd-2022-01-14-230113/openshift-install-linux-4.9.0-0.okd-2022-01-14-230113.tar.gz\">https://github.com/openshift/okd/releases/download/4.9.0-0.okd-2022-01-14-230113/openshift-install-linux-4.9.0-0.okd-2022-01-14-230113.tar.gz</a>\n</blockquote>\n<blockquote>tar -xvzf <a href=\"https://github.com/openshift/okd/releases/download/4.9.0-0.okd-2022-01-14-230113/openshift-client-linux-4.9.0-0.okd-2022-01-14-230113.tar.gz\">openshift-client-linux-4.9.0\u20130.okd-2022\u201301\u201314\u2013230113.tar.gz</a>\n</blockquote>\n<blockquote>tar -xvzf <a href=\"https://github.com/openshift/okd/releases/download/4.9.0-0.okd-2022-01-14-230113/openshift-install-linux-4.9.0-0.okd-2022-01-14-230113.tar.gz\">openshift-install-linux-4.9.0\u20130.okd-2022\u201301\u201314\u2013230113.tar.gz</a>\n</blockquote>\n<blockquote>sudo mv kubectl oc openshift-install /usr/local/bin/</blockquote>\n<blockquote>oc version</blockquote>\n<blockquote>openshift-install version</blockquote>\n<blockquote>openshift-install create install-config\u200a\u2014\u200adir &lt;cluster\u00a0name&gt;</blockquote>\n<p>Enter the details for your cloud and use the fake pull\u00a0secret</p>\n<blockquote>\n<strong>Pull Secret </strong>{\u201cauths\u201d:{\u201cfake\u201d:{\u201cauth\u201d: \u201cbar\u201d}}}</blockquote>\n<blockquote>openshift-install create cluster\u200a\u2014\u200adir akaleem\u200a\u2014\u200alog-level info</blockquote>\n<p>if you want to dig deeper into the installation process, there is a link to\u00a0follow</p>\n<a href=\"https://medium.com/media/18ffda286e222d1398b9be14d310a210/href\">https://medium.com/media/18ffda286e222d1398b9be14d310a210/href</a><h3>Github</h3>\n<p><a href=\"https://github.com/openshift/okd\">GitHub - openshift/okd: The self-managing, auto-upgrading, Kubernetes distribution for everyone</a></p>\n<p>Enjoy!</p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=58a0be9e39d1\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*B78USpQOCsk43PUD0c9jlQ.png\"></figure><p><em>OKD</em> is the community distribution of <a href=\"https://kubernetes.io/\">Kubernetes</a> optimized for continuous application development and multi-tenant deployment. OKD adds developer and operations-centric tools on top of Kubernetes to enable rapid application development, easy deployment and scaling, and long-term lifecycle maintenance for small and large teams. <em>OKD</em> is also referred to as <em>Origin</em> in github and in the documentation. <em>OKD</em> makes launching Kubernetes on any cloud or bare metal a snap, simplifies running and updating clusters, and provides all of the tools to make your containerized-applications succeed.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*TaqmrENuhiEZEL8DzS8oJw.png\"></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*jY5-NnEH4AURnp6Mb7X1Lg.jpeg\"></figure><h3><strong>Operators</strong></h3>\n<p>Operator automates what Kubernetes does on the behalf of a\u00a0user.</p>\n<p>An operator extends the Kubernetes functionality to automate the management of the entire life cycle of a particular application.</p>\n<p>it\u2019s a custom Kubernetes controller that uses custom resources (CR) to manage applications and their components.</p>\n<p>Operator SDK is basically a framework to build an operator using Golang, helm and\u00a0Ansible</p>\n<h3>Operators all the way\u00a0down</h3>\n<p>Openshift has been built leveraging the operators which manages the application but the cluster itself, for example establishing a cluster on autopilot, where cluster is managing itself by using the following operators:</p>\n<h4>Cluster Version\u00a0Operator</h4>\n<p>The main operator is Cluster Version Operator, it basically make sure that all the essential/core operators are present which I am gonna discuss in this slide. CVO operator also maintains and updates the versions of the core operators.</p>\n<h4>Kube-apiserver, kube-controller-manager, kube-scheduler, etcd:</h4>\n<p>these operators ensures the core components of Kubernetes are configured for a\u00a0cluster.</p>\n<h4>Cluster Network\u00a0Operator</h4>\n<p>The Cluster Network Operator installs and upgrades the networking components on an OpenShift Kubernetes cluster.</p>\n<p>It follows the Controller pattern: it reconciles the state of the cluster against a desired configuration which includes ensuring if the CNI plugins are installed and SDN is configured</p>\n<p>In OpenShift, the Cluster Network Operator runs very early in the install process\u200a\u2014\u200awhile the boostrap API server is still\u00a0running.</p>\n<h4>OpenShift Ingress\u00a0Operator</h4>\n<p>Ingress Operator is an OpenShift component which enables external access to cluster services by configuring Ingress Controllers, and ensures if the routes are\u00a0setup</p>\n<p>Ingress Operator implements the OpenShift ingresscontroller API.</p>\n<h4>image Registry\u00a0Operator</h4>\n<p>It manages all configuration of the Openshift registry including creating\u00a0storage.</p>\n<p>On initial startup the operator will create a default image-registry resource instance based on configuration detected in the cluster (e.g. what cloud storage type to use based on the cloud provider).</p>\n<p>If insufficient information is available to define a complete image-registry resource, the incomplete resource will be defined and the operator will update the resource status with information about what is\u00a0missing.</p>\n<h4>Cluster Monitoring Operator</h4>\n<p>The Cluster Monitoring Operator manages and updates the Prometheus-based cluster monitoring stack deployed on top of OpenShift.</p>\n<h3>OperatorHub.io</h3>\n<p><a href=\"http://operatorhub.io/\">OperatorHub.io</a> is a new home for the Kubernetes community to share Operators.</p>\n<h4>Operator Lifecycle Manager</h4>\n<p>OLM is like CVO for all the OperatorHub\u2019s/optional operators</p>\n<p>Operator Lifecycle Manager (OLM) helps users to install, update, and manage the lifecycle of Kubernetes Operators and it takes care of operator scope (cluster-wide or namespace only), ensures it can be updated manually and manages permissions to use and install operators for the openshift cluster</p>\n<p>OperatorHub is integrated in OpenShift console, so developers can install operators via self-service interface.</p>\n<p>for example\u00a0: Storage (operators based on Rook.io), pipelines operators based on Tekton, Argo CD, KubeVirt, Grafana and many\u00a0more.</p>\n<h3>The State of OKD Today and\u00a0Tomorrow</h3>\n<ul>\n<li>Current Stable Release\u00a04.9</li>\n<li>Documentation Sub-Working Group</li>\n<li>Virtualization Sub-Working Group</li>\n<li>crun, cgroupsv2</li>\n<li>Coming Soon: OKD Operator\u00a0Catalog</li>\n<li>Coming Soon: OKD for\u00a0ARM64</li>\n</ul>\n<h3>OKD Working\u00a0Group</h3>\n<h4>Slack</h4>\n<p><strong>#openshift-users</strong> on<strong> kubernetes.slack.com</strong></p>\n<h4>Issue Tracker</h4>\n<p>github.com/openshift/okd</p>\n<p><strong>Bi-weekly Video Conference Meetings</strong><br>apps.fedoraproject.org/calendar/okd</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*isDRGZhWtXFYTTRO8qX4Ww.png\"></figure><h3>Fedora CoreOS Working\u00a0Group</h3>\n<h4>IRC /\u00a0Matrix</h4>\n<p><strong>#fedora-coreos</strong> on Libera.chat</p>\n<h4>Issue Tracker</h4>\n<p>github.com/coreos/fedora-coreos-tracker</p>\n<h4><strong>Weekly Meetings</strong></h4>\n<p>apps.fedoraproject.org/calendar/CoreOS/</p>\n<h3>OKD Installation on Vmware Vpshere/Any Other\u00a0Cloud</h3>\n<p>Download the openshift client and openshift-install for\u00a0OKD</p>\n<blockquote>wget <a href=\"https://github.com/openshift/okd/releases/download/4.9.0-0.okd-2022-01-14-230113/openshift-client-linux-4.9.0-0.okd-2022-01-14-230113.tar.gz\">https://github.com/openshift/okd/releases/download/4.9.0-0.okd-2022-01-14-230113/openshift-client-linux-4.9.0-0.okd-2022-01-14-230113.tar.gz</a>\n</blockquote>\n<blockquote>wget <a href=\"https://github.com/openshift/okd/releases/download/4.9.0-0.okd-2022-01-14-230113/openshift-install-linux-4.9.0-0.okd-2022-01-14-230113.tar.gz\">https://github.com/openshift/okd/releases/download/4.9.0-0.okd-2022-01-14-230113/openshift-install-linux-4.9.0-0.okd-2022-01-14-230113.tar.gz</a>\n</blockquote>\n<blockquote>tar -xvzf <a href=\"https://github.com/openshift/okd/releases/download/4.9.0-0.okd-2022-01-14-230113/openshift-client-linux-4.9.0-0.okd-2022-01-14-230113.tar.gz\">openshift-client-linux-4.9.0\u20130.okd-2022\u201301\u201314\u2013230113.tar.gz</a>\n</blockquote>\n<blockquote>tar -xvzf <a href=\"https://github.com/openshift/okd/releases/download/4.9.0-0.okd-2022-01-14-230113/openshift-install-linux-4.9.0-0.okd-2022-01-14-230113.tar.gz\">openshift-install-linux-4.9.0\u20130.okd-2022\u201301\u201314\u2013230113.tar.gz</a>\n</blockquote>\n<blockquote>sudo mv kubectl oc openshift-install /usr/local/bin/</blockquote>\n<blockquote>oc version</blockquote>\n<blockquote>openshift-install version</blockquote>\n<blockquote>openshift-install create install-config\u200a\u2014\u200adir &lt;cluster\u00a0name&gt;</blockquote>\n<p>Enter the details for your cloud and use the fake pull\u00a0secret</p>\n<blockquote>\n<strong>Pull Secret </strong>{\u201cauths\u201d:{\u201cfake\u201d:{\u201cauth\u201d: \u201cbar\u201d}}}</blockquote>\n<blockquote>openshift-install create cluster\u200a\u2014\u200adir akaleem\u200a\u2014\u200alog-level info</blockquote>\n<p>if you want to dig deeper into the installation process, there is a link to\u00a0follow</p>\n<a href=\"https://medium.com/media/18ffda286e222d1398b9be14d310a210/href\">https://medium.com/media/18ffda286e222d1398b9be14d310a210/href</a><h3>Github</h3>\n<p><a href=\"https://github.com/openshift/okd\">GitHub - openshift/okd: The self-managing, auto-upgrading, Kubernetes distribution for everyone</a></p>\n<p>Enjoy!</p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=58a0be9e39d1\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":["kubernetes","okd","openshift"]},{"title":"Simple Todo App Project with Golang and MongoDB","pubDate":"2021-11-11 18:46:08","link":"https://akaleem306.medium.com/simple-todo-app-project-with-golang-and-mongodb-8ad3c921296?source=rss-8ce4e10c19af------2","guid":"https://medium.com/p/8ad3c921296","author":"Ayesha Kaleem","thumbnail":"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=8ad3c921296","description":"\n<p>main.go</p>\n<pre>package main</pre>\n<pre>import (<br> \"context\"<br> \"encoding/json\"<br> \"log\"<br> \"net/http\"<br> \"os\"<br> \"os/signal\"<br> \"strings\"<br> \"time\"</pre>\n<pre>\"github.com/go-chi/chi\"<br> \"github.com/go-chi/chi/middleware\"<br> \"github.com/thedevsaddam/renderer\"<br> mgo \"gopkg.in/mgo.v2\"<br> \"gopkg.in/mgo.v2/bson\"<br>)</pre>\n<pre>var rnd *renderer.Render<br>var db *mgo.Database</pre>\n<pre>const (<br> hostName       string = \"localhost:27017\"<br> dbName         string = \"demo_todo\"<br> collectionName string = \"todo\"<br> port           string = \":9000\"<br>)</pre>\n<pre>type (<br> todoModel struct {<br>  ID        bson.ObjectId `bson:\"_id,omitempty\"`<br>  Title     string        `bson:\"title\"`<br>  Completed bool          `bson:\"completed\"`<br>  CreatedAt time.Time     `bson:\"createdAt\"`<br> }<br> todo struct {<br>  ID        string    `json:\"id\"`<br>  Title     string    `json:\"title\"`<br>  Completed bool      `json:\"completed\"`<br>  CreatedAt time.Time `json:\"created_at\"`<br> }<br>)</pre>\n<pre>func init() {<br> rnd = renderer.New()<br> sess, err := mgo.Dial(hostName)<br> checkErr(err)<br> sess.SetMode(mgo.Monotonic, true)<br> db = sess.DB(dbName)<br>}<br>func homeHandler(w http.ResponseWriter, r *http.Request) {<br> err := rnd.Template(w, http.StatusOK, []string{\"static/home.tpl\"}, nil)<br> checkErr(err)<br>}<br>func fetchTodos(w http.ResponseWriter, r *http.Request) {<br> todos := []todoModel{}<br> if err := db.C(collectionName).Find(bson.M{}).All(&amp;todos); err != nil {<br>  rnd.JSON(w, http.StatusProcessing, renderer.M{<br>   \"message\": \"Failed to fetch todo\",<br>   \"error\":   err,<br>  })<br>  return<br> }<br> todoList := []todo{}<br> for _, t := range todos {<br>  todoList = append(todoList, todo{<br>   ID:        t.ID.Hex(),<br>   Title:     t.Title,<br>   Completed: t.Completed,<br>   CreatedAt: t.CreatedAt,<br>  })<br> }<br> rnd.JSON(w, http.StatusOK, renderer.M{<br>  \"data\": todoList,<br> })<br>}<br>func createTodo(w http.ResponseWriter, r *http.Request) {<br> var t todo<br> if err := json.NewDecoder(r.Body).Decode(&amp;t); err != nil {<br>  rnd.JSON(w, http.StatusProcessing, err)<br>  return<br> }<br> if t.Title == \"\" {<br>  rnd.JSON(w, http.StatusBadRequest, renderer.M{<br>   \"message\": \"The title is required\",<br>  })<br>  return<br> }<br> tm := todoModel{<br>  ID:        bson.NewObjectId(),<br>  Title:     t.Title,<br>  Completed: false,<br>  CreatedAt: time.Now(),<br> }<br> if err := db.C(collectionName).Insert(&amp;tm); err != nil {<br>  rnd.JSON(w, http.StatusProcessing, renderer.M{<br>   \"message\": \"Failed to save todo\",<br>   \"error\":   err,<br>  })<br>  return<br> }<br> rnd.JSON(w, http.StatusCreated, renderer.M{<br>  \"message\": \"todo created successfully\",<br>  \"todo_id\": tm.ID.Hex(),<br> })<br>}<br>func deleteTodo(w http.ResponseWriter, r *http.Request) {<br> id := strings.TrimSpace(chi.URLParam(r, \"id\"))</pre>\n<pre>if !bson.IsObjectIdHex(id) {<br>  rnd.JSON(w, http.StatusBadRequest, renderer.M{<br>   \"message\": \"The ID is invalid\",<br>  })<br>  return<br> }<br> if err := db.C(collectionName).RemoveId(bson.ObjectIdHex(id)); err != nil {<br>  rnd.JSON(w, http.StatusProcessing, renderer.M{<br>   \"message\": \"failed to delete todo\",<br>   \"error\":   err,<br>  })<br>  return<br> }<br> rnd.JSON(w, http.StatusOK, renderer.M{<br>  \"message\": \"todo deleted successfully\",<br> })<br>}<br>func updateTodo(w http.ResponseWriter, r *http.Request) {<br> id := strings.TrimSpace(chi.URLParam(r, \"id\"))<br> if !bson.IsObjectIdHex(id) {<br>  rnd.JSON(w, http.StatusBadRequest, renderer.M{<br>   \"message\": \"The id is invalid\",<br>  })<br>  return<br> }<br> var t todo<br> if err := json.NewDecoder(r.Body).Decode(&amp;t); err != nil {<br>  rnd.JSON(w, http.StatusProcessing, err)<br>  return<br> }<br> if t.Title == \"\" {<br>  rnd.JSON(w, http.StatusBadRequest, renderer.M{<br>   \"message\": \"the title field is required\",<br>  })<br>  return<br> }<br> if err := db.C(collectionName).Update(bson.M{\"_id\": bson.ObjectIdHex(id)}, bson.M{\"title\": t.Title, \"completed\": t.Completed}); err != nil {<br>  rnd.JSON(w, http.StatusProcessing, renderer.M{<br>   \"message\": \"failed to update todo\",<br>   \"error\":   err,<br>  })<br>  return<br> }</pre>\n<pre>}<br>func main() {<br> stopChan := make(chan os.Signal, 1)<br> signal.Notify(stopChan, os.Interrupt)</pre>\n<pre>r := chi.NewRouter()<br> r.Use(middleware.Logger)<br> r.Get(\"/\", homeHandler)<br> r.Mount(\"/todo\", todoHandlers())</pre>\n<pre>srv := &amp;http.Server{<br>  Addr:    port,<br>  Handler: r,<br>  // timeouts for databases<br>  ReadTimeout:  60 * time.Second,<br>  WriteTimeout: 60 * time.Second,<br>  IdleTimeout:  60 * time.Second,<br> }<br> go func() {<br>  log.Println(\"Listening on port, port\")<br>  if err := srv.ListenAndServe(); err != nil {<br>   log.Printf(\"listen:%s\\n\", err)<br>  }<br> }()</pre>\n<pre>&lt;-stopChan<br> log.Println(\"shutting down the server....\")<br> ctx, cancel := context.WithTimeout(context.Background(), 5*time.Second)<br> srv.Shutdown(ctx)<br> defer cancel()<br> log.Println(\"Server gracefully stopped!\")</pre>\n<pre>}<br>func todoHandlers() http.Handler {<br> rg := chi.NewRouter()<br> rg.Group(func(r chi.Router) {<br>  r.Get(\"/\", fetchTodos)<br>  r.Get(\"/\", createTodo)<br>  r.Put(\"/{id}\", updateTodo)<br>  r.Delete(\"/{id}\", deleteTodo)<br> })<br> return rg<br>}<br>func checkErr(err error) {<br> if err != nil {<br>  log.Fatal(err)<br> }<br>}</pre>\n<p>static/home.tpl</p>\n<pre>&lt;!doctype html&gt;<br>&lt;html lang=\"en\"&gt;<br>  &lt;head&gt;<br>    &lt;title&gt;Todo&lt;/title&gt;<br>    &lt;!-- Required meta tags --&gt;<br>    &lt;meta charset=\"utf-8\"&gt;<br>    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"&gt;<br>    &lt;script type=\"text/javascript\" src=\"<a href=\"https://unpkg.com/vue@2.3.4\">https://unpkg.com/vue@2.3.4</a>\"&gt;&lt;/script&gt;<br>    &lt;script src=\"<a href=\"https://cdn.jsdelivr.net/npm/vue-resource@1.3.4\">https://cdn.jsdelivr.net/npm/vue-resource@1.3.4</a>\"&gt;&lt;/script&gt;<br>    &lt;!-- Bootstrap CSS --&gt;<br>    &lt;link rel=\"stylesheet\" href=\"<a href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css\">https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css</a>\" integrity=\"sha384-PsH8R72JQ3SOdhVi3uxftmaW6Vc51MKb0q5P2rRUpPvrszuE4W1povHYgTpBfshb\" crossorigin=\"anonymous\"&gt;<br>    &lt;link rel=\"stylesheet\" href=\"<a href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css</a>\"&gt;<br>    &lt;style type=\"text/css\"&gt;<br>      .del {<br>          text-decoration: line-through;<br>      }<br>      .card{<br>        border-radius: 0 !important;<br>        border: none;<br>      }<br>      .card-body{<br>        padding: 0 !important;<br>      }<br>      .todo-title{<br>        width: 100%;<br>        background: #b88f92;<br>        color: #FFF<br>        ;<br>        font-size: 30px;<br>        font-weight: bold;<br>        padding: 20px 10px;<br>        text-align: center;<br>        border-top-left-radius: 5px;<br>        border-top-right-radius: 5px;<br>      }<br>      .custom-input{<br>        border-radius: 0 !important;<br>        padding: 10px 10px !important;<br>        border-bottom: none;<br>      }<br>      .custom-input:focus, .custom-input:active{<br>        box-shadow: none !important;<br>      }<br>      .custom-button{<br>        border-radius: 0 !important;<br>        cursor: pointer;<br>      }<br>      .custom-button:focus, .custom-button:active{<br>        box-shadow: none !important;<br>      }<br>      .list-group li{<br>        cursor: pointer;<br>        border-radius: 0 !important;<br>      }<br>      .checked{<br>        background: #5e6669;<br>        color: #95a5a6;<br>      }<br>      .error{<br>        border: 2px solid #e74c3c !important;<br>      }<br>      .not-checked{<br>        background: #2227c7;<br>        color: #FFF;<br>        font-weight: bold;<br>      }<br>    &lt;/style&gt;<br>  &lt;/head&gt;<br>  &lt;body&gt;<br>    &lt;div class=\"container\" id=\"root\"&gt;<br>        &lt;div class=\"row\"&gt;<br>            &lt;div class=\"col-6 offset-3\"&gt;<br>                &lt;br&gt;&lt;br&gt;<br>                &lt;div class=\"card\"&gt;<br>                  &lt;div class=\"todo-title\"&gt;<br>                    Daily Todo Lists<br>                  &lt;/div&gt;<br>                  &lt;div class=\"card-body\"&gt;<br>                      &lt;form v-on:submit.prevent&gt;<br>                        &lt;div class=\"input-group\"&gt;<br>                          &lt;input type=\"text\" v-model=\"todo.title\" v-on:keyup=\"checkForEnter($event)\" class=\"form-control custom-input\" :class=\"{ 'error': showError }\" placeholder=\"Add your todo\"&gt;<br>                          &lt;span class=\"input-group-btn\"&gt;<br>                            &lt;button class=\"btn custom-button\" :class=\"{'btn-success' : !enableEdit, 'btn-warning' : enableEdit}\" type=\"button\"  v-on:click=\"addTodo\"&gt;&lt;span :class=\"{'fa fa-plus' : !enableEdit, 'fa fa-edit' : enableEdit}\"&gt;&lt;/span&gt;&lt;/button&gt;<br>                          &lt;/span&gt;<br>                        &lt;/div&gt;<br>                      &lt;/form&gt;<br>                      &lt;ul class=\"list-group\"&gt;<br>                        &lt;li class=\"list-group-item\" :class=\"{ 'checked': todo.completed, 'not-checked': !todo.completed }\" v-for=\"(todo, todoIndex) in todos\" v-on:click=\"toggleTodo(todo, todoIndex)\"&gt;<br>                            &lt;i :class=\"{'fa fa-circle': !todo.completed, 'fa fa-check-circle text-success': todo.completed }\"&gt;&amp;nbsp;&lt;/i&gt;<br>                            &lt;span :class=\"{ 'del': todo.completed }\"&gt;@{ todo.title }&lt;/span&gt;<br>                            &lt;div class=\"btn-group float-right\" role=\"group\" aria-label=\"Basic example\"&gt;<br>                              &lt;button type=\"button\" class=\"btn btn-success btn-sm custom-button\" v-on:click.prevent.stop v-on:click=\"editTodo(todo, todoIndex)\"&gt;&lt;span class=\"fa fa-edit\"&gt;&lt;/span&gt;&lt;/button&gt;<br>                              &lt;button type=\"button\" class=\"btn btn-danger btn-sm custom-button\" v-on:click.prevent.stop v-on:click=\"deleteTodo(todo, todoIndex)\"&gt;&lt;span class=\"fa fa-trash\"&gt;&lt;/span&gt;&lt;/button&gt;<br>                            &lt;/div&gt;<br>                        &lt;/li&gt;<br>                      &lt;/ul&gt;<br>                  &lt;/div&gt;<br>                &lt;/div&gt;<br>            &lt;/div&gt;<br>        &lt;/div&gt;<br>    &lt;/div&gt;<br>    &lt;!-- Optional JavaScript --&gt;<br>    &lt;!-- jQuery first, then Popper.js, then Bootstrap JS --&gt;<br>    &lt;script src=\"<a href=\"https://code.jquery.com/jquery-3.2.1.slim.min.js\">https://code.jquery.com/jquery-3.2.1.slim.min.js</a>\" integrity=\"sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN\" crossorigin=\"anonymous\"&gt;&lt;/script&gt;<br>    &lt;script src=\"<a href=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.3/umd/popper.min.js\">https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.3/umd/popper.min.js</a>\" integrity=\"sha384-vFJXuSJphROIrBnz7yo7oB41mKfc8JzQZiCq4NCceLEaO4IHwicKwpJf9c9IpFgh\" crossorigin=\"anonymous\"&gt;&lt;/script&gt;<br>    &lt;script src=\"<a href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/js/bootstrap.min.js\">https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/js/bootstrap.min.js</a>\" integrity=\"sha384-alpBpkh1PFOepccYVYDB4do5UnbKysX5WZXm3XxPqe5iKTfUKjNkCk9SaVuEZflJ\" crossorigin=\"anonymous\"&gt;&lt;/script&gt;<br>    &lt;script type=\"text/javascript\"&gt;<br>      var Vue = new Vue({<br>        el: '#root',<br>        delimiters: ['@{', '}'],<br>        data: {<br>          showError: false,<br>          enableEdit: false,<br>          todo: {id: '', title: '', completed: false},<br>          todos: []<br>        },<br>        mounted () {<br>          this.$http.get('todo').then(response =&gt; {<br>            this.todos = response.body.data;<br>          });<br>        },<br>        methods: {<br>          addTodo(){<br>            if (this.todo.title == ''){<br>              this.showError = true;<br>            }else{<br>              this.showError = false;<br>              if(this.enableEdit){<br>                this.$http.put('todo/'+this.todo.id, this.todo).then(response =&gt; {<br>                  if(response.status == 200){<br>                    this.todos[this.todo.todoIndex] = this.todo;<br>                  }<br>                });<br>                this.todo = {id: '', title: '', completed: false};<br>                this.enableEdit = false;<br>              }else{<br>                this.$http.post('todo', {title: this.todo.title}).then(response =&gt; {<br>                  if(response.status == 201){<br>                    this.todos.push({id: response.body.todo_id, title: this.todo.title, completed: false});<br>                    this.todo = {id: '', title: '', completed: false};<br>                  }<br>                });<br>              }<br>            }<br>          },<br>          checkForEnter(event){<br>            if (event.key == \"Enter\") {<br>              this.addTodo();<br>            }<br>          },<br>          toggleTodo(todo, todoIndex){<br>            var completedToggle;<br>            if (todo.completed == true) {<br>              completedToggle = false;<br>            }else{<br>              completedToggle = true;<br>            }<br>            this.$http.put('todo/'+todo.id, {id: todo.id, title: todo.title, completed: completedToggle}).then(response =&gt; {<br>              if(response.status == 200){<br>                this.todos[todoIndex].completed = completedToggle;<br>              }<br>            });<br>          },<br>          editTodo(todo, todoIndex){<br>            this.enableEdit = true;<br>            this.todo = todo;<br>            this.todo.todoIndex = todoIndex;<br>          },<br>          deleteTodo(todo, todoIndex){<br>            if(confirm(\"Are you sure ?\")){<br>              this.$http.delete('todo/'+todo.id).then(response =&gt; {<br>                if(response.status == 200){<br>                  this.todos.splice(todoIndex, 1);<br>                  this.todo = {id: '', title: '', completed: false};<br>                }<br>              });<br>            }<br>          }<br>        }<br>      });<br>    &lt;/script&gt;<br>  &lt;/body&gt;<br>&lt;/html&gt;</pre>\n<p><a href=\"https://github.com/ayesha54/todo_golang\">Github</a></p>\n<p>Stay tuned for more fun projects! \ud83d\ude0d</p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=8ad3c921296\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<p>main.go</p>\n<pre>package main</pre>\n<pre>import (<br> \"context\"<br> \"encoding/json\"<br> \"log\"<br> \"net/http\"<br> \"os\"<br> \"os/signal\"<br> \"strings\"<br> \"time\"</pre>\n<pre>\"github.com/go-chi/chi\"<br> \"github.com/go-chi/chi/middleware\"<br> \"github.com/thedevsaddam/renderer\"<br> mgo \"gopkg.in/mgo.v2\"<br> \"gopkg.in/mgo.v2/bson\"<br>)</pre>\n<pre>var rnd *renderer.Render<br>var db *mgo.Database</pre>\n<pre>const (<br> hostName       string = \"localhost:27017\"<br> dbName         string = \"demo_todo\"<br> collectionName string = \"todo\"<br> port           string = \":9000\"<br>)</pre>\n<pre>type (<br> todoModel struct {<br>  ID        bson.ObjectId `bson:\"_id,omitempty\"`<br>  Title     string        `bson:\"title\"`<br>  Completed bool          `bson:\"completed\"`<br>  CreatedAt time.Time     `bson:\"createdAt\"`<br> }<br> todo struct {<br>  ID        string    `json:\"id\"`<br>  Title     string    `json:\"title\"`<br>  Completed bool      `json:\"completed\"`<br>  CreatedAt time.Time `json:\"created_at\"`<br> }<br>)</pre>\n<pre>func init() {<br> rnd = renderer.New()<br> sess, err := mgo.Dial(hostName)<br> checkErr(err)<br> sess.SetMode(mgo.Monotonic, true)<br> db = sess.DB(dbName)<br>}<br>func homeHandler(w http.ResponseWriter, r *http.Request) {<br> err := rnd.Template(w, http.StatusOK, []string{\"static/home.tpl\"}, nil)<br> checkErr(err)<br>}<br>func fetchTodos(w http.ResponseWriter, r *http.Request) {<br> todos := []todoModel{}<br> if err := db.C(collectionName).Find(bson.M{}).All(&amp;todos); err != nil {<br>  rnd.JSON(w, http.StatusProcessing, renderer.M{<br>   \"message\": \"Failed to fetch todo\",<br>   \"error\":   err,<br>  })<br>  return<br> }<br> todoList := []todo{}<br> for _, t := range todos {<br>  todoList = append(todoList, todo{<br>   ID:        t.ID.Hex(),<br>   Title:     t.Title,<br>   Completed: t.Completed,<br>   CreatedAt: t.CreatedAt,<br>  })<br> }<br> rnd.JSON(w, http.StatusOK, renderer.M{<br>  \"data\": todoList,<br> })<br>}<br>func createTodo(w http.ResponseWriter, r *http.Request) {<br> var t todo<br> if err := json.NewDecoder(r.Body).Decode(&amp;t); err != nil {<br>  rnd.JSON(w, http.StatusProcessing, err)<br>  return<br> }<br> if t.Title == \"\" {<br>  rnd.JSON(w, http.StatusBadRequest, renderer.M{<br>   \"message\": \"The title is required\",<br>  })<br>  return<br> }<br> tm := todoModel{<br>  ID:        bson.NewObjectId(),<br>  Title:     t.Title,<br>  Completed: false,<br>  CreatedAt: time.Now(),<br> }<br> if err := db.C(collectionName).Insert(&amp;tm); err != nil {<br>  rnd.JSON(w, http.StatusProcessing, renderer.M{<br>   \"message\": \"Failed to save todo\",<br>   \"error\":   err,<br>  })<br>  return<br> }<br> rnd.JSON(w, http.StatusCreated, renderer.M{<br>  \"message\": \"todo created successfully\",<br>  \"todo_id\": tm.ID.Hex(),<br> })<br>}<br>func deleteTodo(w http.ResponseWriter, r *http.Request) {<br> id := strings.TrimSpace(chi.URLParam(r, \"id\"))</pre>\n<pre>if !bson.IsObjectIdHex(id) {<br>  rnd.JSON(w, http.StatusBadRequest, renderer.M{<br>   \"message\": \"The ID is invalid\",<br>  })<br>  return<br> }<br> if err := db.C(collectionName).RemoveId(bson.ObjectIdHex(id)); err != nil {<br>  rnd.JSON(w, http.StatusProcessing, renderer.M{<br>   \"message\": \"failed to delete todo\",<br>   \"error\":   err,<br>  })<br>  return<br> }<br> rnd.JSON(w, http.StatusOK, renderer.M{<br>  \"message\": \"todo deleted successfully\",<br> })<br>}<br>func updateTodo(w http.ResponseWriter, r *http.Request) {<br> id := strings.TrimSpace(chi.URLParam(r, \"id\"))<br> if !bson.IsObjectIdHex(id) {<br>  rnd.JSON(w, http.StatusBadRequest, renderer.M{<br>   \"message\": \"The id is invalid\",<br>  })<br>  return<br> }<br> var t todo<br> if err := json.NewDecoder(r.Body).Decode(&amp;t); err != nil {<br>  rnd.JSON(w, http.StatusProcessing, err)<br>  return<br> }<br> if t.Title == \"\" {<br>  rnd.JSON(w, http.StatusBadRequest, renderer.M{<br>   \"message\": \"the title field is required\",<br>  })<br>  return<br> }<br> if err := db.C(collectionName).Update(bson.M{\"_id\": bson.ObjectIdHex(id)}, bson.M{\"title\": t.Title, \"completed\": t.Completed}); err != nil {<br>  rnd.JSON(w, http.StatusProcessing, renderer.M{<br>   \"message\": \"failed to update todo\",<br>   \"error\":   err,<br>  })<br>  return<br> }</pre>\n<pre>}<br>func main() {<br> stopChan := make(chan os.Signal, 1)<br> signal.Notify(stopChan, os.Interrupt)</pre>\n<pre>r := chi.NewRouter()<br> r.Use(middleware.Logger)<br> r.Get(\"/\", homeHandler)<br> r.Mount(\"/todo\", todoHandlers())</pre>\n<pre>srv := &amp;http.Server{<br>  Addr:    port,<br>  Handler: r,<br>  // timeouts for databases<br>  ReadTimeout:  60 * time.Second,<br>  WriteTimeout: 60 * time.Second,<br>  IdleTimeout:  60 * time.Second,<br> }<br> go func() {<br>  log.Println(\"Listening on port, port\")<br>  if err := srv.ListenAndServe(); err != nil {<br>   log.Printf(\"listen:%s\\n\", err)<br>  }<br> }()</pre>\n<pre>&lt;-stopChan<br> log.Println(\"shutting down the server....\")<br> ctx, cancel := context.WithTimeout(context.Background(), 5*time.Second)<br> srv.Shutdown(ctx)<br> defer cancel()<br> log.Println(\"Server gracefully stopped!\")</pre>\n<pre>}<br>func todoHandlers() http.Handler {<br> rg := chi.NewRouter()<br> rg.Group(func(r chi.Router) {<br>  r.Get(\"/\", fetchTodos)<br>  r.Get(\"/\", createTodo)<br>  r.Put(\"/{id}\", updateTodo)<br>  r.Delete(\"/{id}\", deleteTodo)<br> })<br> return rg<br>}<br>func checkErr(err error) {<br> if err != nil {<br>  log.Fatal(err)<br> }<br>}</pre>\n<p>static/home.tpl</p>\n<pre>&lt;!doctype html&gt;<br>&lt;html lang=\"en\"&gt;<br>  &lt;head&gt;<br>    &lt;title&gt;Todo&lt;/title&gt;<br>    &lt;!-- Required meta tags --&gt;<br>    &lt;meta charset=\"utf-8\"&gt;<br>    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"&gt;<br>    &lt;script type=\"text/javascript\" src=\"<a href=\"https://unpkg.com/vue@2.3.4\">https://unpkg.com/vue@2.3.4</a>\"&gt;&lt;/script&gt;<br>    &lt;script src=\"<a href=\"https://cdn.jsdelivr.net/npm/vue-resource@1.3.4\">https://cdn.jsdelivr.net/npm/vue-resource@1.3.4</a>\"&gt;&lt;/script&gt;<br>    &lt;!-- Bootstrap CSS --&gt;<br>    &lt;link rel=\"stylesheet\" href=\"<a href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css\">https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css</a>\" integrity=\"sha384-PsH8R72JQ3SOdhVi3uxftmaW6Vc51MKb0q5P2rRUpPvrszuE4W1povHYgTpBfshb\" crossorigin=\"anonymous\"&gt;<br>    &lt;link rel=\"stylesheet\" href=\"<a href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css</a>\"&gt;<br>    &lt;style type=\"text/css\"&gt;<br>      .del {<br>          text-decoration: line-through;<br>      }<br>      .card{<br>        border-radius: 0 !important;<br>        border: none;<br>      }<br>      .card-body{<br>        padding: 0 !important;<br>      }<br>      .todo-title{<br>        width: 100%;<br>        background: #b88f92;<br>        color: #FFF<br>        ;<br>        font-size: 30px;<br>        font-weight: bold;<br>        padding: 20px 10px;<br>        text-align: center;<br>        border-top-left-radius: 5px;<br>        border-top-right-radius: 5px;<br>      }<br>      .custom-input{<br>        border-radius: 0 !important;<br>        padding: 10px 10px !important;<br>        border-bottom: none;<br>      }<br>      .custom-input:focus, .custom-input:active{<br>        box-shadow: none !important;<br>      }<br>      .custom-button{<br>        border-radius: 0 !important;<br>        cursor: pointer;<br>      }<br>      .custom-button:focus, .custom-button:active{<br>        box-shadow: none !important;<br>      }<br>      .list-group li{<br>        cursor: pointer;<br>        border-radius: 0 !important;<br>      }<br>      .checked{<br>        background: #5e6669;<br>        color: #95a5a6;<br>      }<br>      .error{<br>        border: 2px solid #e74c3c !important;<br>      }<br>      .not-checked{<br>        background: #2227c7;<br>        color: #FFF;<br>        font-weight: bold;<br>      }<br>    &lt;/style&gt;<br>  &lt;/head&gt;<br>  &lt;body&gt;<br>    &lt;div class=\"container\" id=\"root\"&gt;<br>        &lt;div class=\"row\"&gt;<br>            &lt;div class=\"col-6 offset-3\"&gt;<br>                &lt;br&gt;&lt;br&gt;<br>                &lt;div class=\"card\"&gt;<br>                  &lt;div class=\"todo-title\"&gt;<br>                    Daily Todo Lists<br>                  &lt;/div&gt;<br>                  &lt;div class=\"card-body\"&gt;<br>                      &lt;form v-on:submit.prevent&gt;<br>                        &lt;div class=\"input-group\"&gt;<br>                          &lt;input type=\"text\" v-model=\"todo.title\" v-on:keyup=\"checkForEnter($event)\" class=\"form-control custom-input\" :class=\"{ 'error': showError }\" placeholder=\"Add your todo\"&gt;<br>                          &lt;span class=\"input-group-btn\"&gt;<br>                            &lt;button class=\"btn custom-button\" :class=\"{'btn-success' : !enableEdit, 'btn-warning' : enableEdit}\" type=\"button\"  v-on:click=\"addTodo\"&gt;&lt;span :class=\"{'fa fa-plus' : !enableEdit, 'fa fa-edit' : enableEdit}\"&gt;&lt;/span&gt;&lt;/button&gt;<br>                          &lt;/span&gt;<br>                        &lt;/div&gt;<br>                      &lt;/form&gt;<br>                      &lt;ul class=\"list-group\"&gt;<br>                        &lt;li class=\"list-group-item\" :class=\"{ 'checked': todo.completed, 'not-checked': !todo.completed }\" v-for=\"(todo, todoIndex) in todos\" v-on:click=\"toggleTodo(todo, todoIndex)\"&gt;<br>                            &lt;i :class=\"{'fa fa-circle': !todo.completed, 'fa fa-check-circle text-success': todo.completed }\"&gt;&amp;nbsp;&lt;/i&gt;<br>                            &lt;span :class=\"{ 'del': todo.completed }\"&gt;@{ todo.title }&lt;/span&gt;<br>                            &lt;div class=\"btn-group float-right\" role=\"group\" aria-label=\"Basic example\"&gt;<br>                              &lt;button type=\"button\" class=\"btn btn-success btn-sm custom-button\" v-on:click.prevent.stop v-on:click=\"editTodo(todo, todoIndex)\"&gt;&lt;span class=\"fa fa-edit\"&gt;&lt;/span&gt;&lt;/button&gt;<br>                              &lt;button type=\"button\" class=\"btn btn-danger btn-sm custom-button\" v-on:click.prevent.stop v-on:click=\"deleteTodo(todo, todoIndex)\"&gt;&lt;span class=\"fa fa-trash\"&gt;&lt;/span&gt;&lt;/button&gt;<br>                            &lt;/div&gt;<br>                        &lt;/li&gt;<br>                      &lt;/ul&gt;<br>                  &lt;/div&gt;<br>                &lt;/div&gt;<br>            &lt;/div&gt;<br>        &lt;/div&gt;<br>    &lt;/div&gt;<br>    &lt;!-- Optional JavaScript --&gt;<br>    &lt;!-- jQuery first, then Popper.js, then Bootstrap JS --&gt;<br>    &lt;script src=\"<a href=\"https://code.jquery.com/jquery-3.2.1.slim.min.js\">https://code.jquery.com/jquery-3.2.1.slim.min.js</a>\" integrity=\"sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN\" crossorigin=\"anonymous\"&gt;&lt;/script&gt;<br>    &lt;script src=\"<a href=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.3/umd/popper.min.js\">https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.3/umd/popper.min.js</a>\" integrity=\"sha384-vFJXuSJphROIrBnz7yo7oB41mKfc8JzQZiCq4NCceLEaO4IHwicKwpJf9c9IpFgh\" crossorigin=\"anonymous\"&gt;&lt;/script&gt;<br>    &lt;script src=\"<a href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/js/bootstrap.min.js\">https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/js/bootstrap.min.js</a>\" integrity=\"sha384-alpBpkh1PFOepccYVYDB4do5UnbKysX5WZXm3XxPqe5iKTfUKjNkCk9SaVuEZflJ\" crossorigin=\"anonymous\"&gt;&lt;/script&gt;<br>    &lt;script type=\"text/javascript\"&gt;<br>      var Vue = new Vue({<br>        el: '#root',<br>        delimiters: ['@{', '}'],<br>        data: {<br>          showError: false,<br>          enableEdit: false,<br>          todo: {id: '', title: '', completed: false},<br>          todos: []<br>        },<br>        mounted () {<br>          this.$http.get('todo').then(response =&gt; {<br>            this.todos = response.body.data;<br>          });<br>        },<br>        methods: {<br>          addTodo(){<br>            if (this.todo.title == ''){<br>              this.showError = true;<br>            }else{<br>              this.showError = false;<br>              if(this.enableEdit){<br>                this.$http.put('todo/'+this.todo.id, this.todo).then(response =&gt; {<br>                  if(response.status == 200){<br>                    this.todos[this.todo.todoIndex] = this.todo;<br>                  }<br>                });<br>                this.todo = {id: '', title: '', completed: false};<br>                this.enableEdit = false;<br>              }else{<br>                this.$http.post('todo', {title: this.todo.title}).then(response =&gt; {<br>                  if(response.status == 201){<br>                    this.todos.push({id: response.body.todo_id, title: this.todo.title, completed: false});<br>                    this.todo = {id: '', title: '', completed: false};<br>                  }<br>                });<br>              }<br>            }<br>          },<br>          checkForEnter(event){<br>            if (event.key == \"Enter\") {<br>              this.addTodo();<br>            }<br>          },<br>          toggleTodo(todo, todoIndex){<br>            var completedToggle;<br>            if (todo.completed == true) {<br>              completedToggle = false;<br>            }else{<br>              completedToggle = true;<br>            }<br>            this.$http.put('todo/'+todo.id, {id: todo.id, title: todo.title, completed: completedToggle}).then(response =&gt; {<br>              if(response.status == 200){<br>                this.todos[todoIndex].completed = completedToggle;<br>              }<br>            });<br>          },<br>          editTodo(todo, todoIndex){<br>            this.enableEdit = true;<br>            this.todo = todo;<br>            this.todo.todoIndex = todoIndex;<br>          },<br>          deleteTodo(todo, todoIndex){<br>            if(confirm(\"Are you sure ?\")){<br>              this.$http.delete('todo/'+todo.id).then(response =&gt; {<br>                if(response.status == 200){<br>                  this.todos.splice(todoIndex, 1);<br>                  this.todo = {id: '', title: '', completed: false};<br>                }<br>              });<br>            }<br>          }<br>        }<br>      });<br>    &lt;/script&gt;<br>  &lt;/body&gt;<br>&lt;/html&gt;</pre>\n<p><a href=\"https://github.com/ayesha54/todo_golang\">Github</a></p>\n<p>Stay tuned for more fun projects! \ud83d\ude0d</p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=8ad3c921296\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":["golang-tutorial","golang","todo"]},{"title":"A Good Link To Learn About K8s Stories","pubDate":"2021-06-21 09:43:01","link":"https://akaleem306.medium.com/a-good-link-to-learn-about-k8s-stories-f8ecc8156c9f?source=rss-8ce4e10c19af------2","guid":"https://medium.com/p/f8ecc8156c9f","author":"Ayesha Kaleem","thumbnail":"https://cdn-images-1.medium.com/max/1024/1*qHyGexipU4CU_eFvbEYzsg.jpeg","description":"\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*qHyGexipU4CU_eFvbEYzsg.jpeg\"></figure><p><a href=\"https://ymmt2005.hatenablog.com/archive/2021/3\">Entries from 2021-03-01 to 1 month - Blog of @ymmt2005</a></p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=f8ecc8156c9f\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*qHyGexipU4CU_eFvbEYzsg.jpeg\"></figure><p><a href=\"https://ymmt2005.hatenablog.com/archive/2021/3\">Entries from 2021-03-01 to 1 month - Blog of @ymmt2005</a></p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=f8ecc8156c9f\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":["kubernetes","k8s"]},{"title":"Binary Search Tree in Go (Golang)","pubDate":"2021-02-15 15:27:19","link":"https://akaleem306.medium.com/binary-search-tree-in-go-golang-ba61b242f63f?source=rss-8ce4e10c19af------2","guid":"https://medium.com/p/ba61b242f63f","author":"Ayesha Kaleem","thumbnail":"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=ba61b242f63f","description":"\n<pre>package main</pre>\n<pre>import (<br> \"fmt\"<br>)</pre>\n<pre>type Node struct {<br> value int<br> left  *Node<br> right *Node<br>}<br>type Tree struct {<br> root *Node<br>}</pre>\n<pre>func (t *Tree) reset() {<br> t.root = nil<br>}<br>func (t *Tree) insert(value int) {<br> t.insertRec(t.root, value)<br>}<br>func (t *Tree) insertRec(node *Node, value int) *Node {<br> if t.root == nil {<br>  t.root = &amp;Node{<br>   value: value,<br>  }<br>  return t.root<br> }<br> if node == nil {<br>  return &amp;Node{value: value}<br> }<br> if value &lt;= node.value {<br>  node.left = t.insertRec(node.left, value)<br> }<br> if value &gt; node.value {<br>  node.right = t.insertRec(node.right, value)<br> }<br> return node</pre>\n<pre>}</pre>\n<pre>func (t *Tree) find(value int) error {<br> node := t.findRec(t.root, value)<br> if node == nil {<br>  return fmt.Errorf(\"Value %d not find in tree\", value)<br> }<br> return nil<br>}<br>func (t *Tree) findRec(node *Node, value int) *Node {<br> if node == nil {<br>  return nil<br> }<br> if node.value == value {<br>  return node<br> }<br> if value &lt; node.value {<br>  return t.findRec(node.left, value)<br> }<br> return t.findRec(node.right, value)<br>}<br>func (t *Tree) inorder() {<br> t.inorderRec(t.root)<br>}<br>func (t *Tree) inorderRec(node *Node) {<br> if node != nil {<br>  t.inorderRec(node.left)<br>  fmt.Println(node.value)<br>  t.inorderRec(node.right)<br><br> }<br>}<br>func main() {<br> tree := &amp;Tree{}<br> eg := []int{2, 4, 5, 6, 7, 8, 8, 5}<br> for _, val := range eg {<br>  tree.insert(val)<br> }<br> fmt.Println(\"printing inorder\")<br> tree.inorder()<br> tree.reset()<br> eg = []int{4, 5, 7, 6, -1, 99, 5}<br> for _, val := range eg {<br>  tree.insert(val)<br> }<br> fmt.Printf(\"\\nPrinting Inorder:\\n\")<br> tree.inorder()<br> fmt.Printf(\"\\nFinding Values:\\n\")<br> err := tree.find(2)<br> if err != nil {<br>  fmt.Printf(\"Value %d Not Found\\n\", 2)<br> } else {<br>  fmt.Printf(\"Value %d Found\\n\", 2)<br> }<br> err = tree.find(6)<br> if err != nil {<br>  fmt.Printf(\"Value %d Not Found\\n\", 6)<br> } else {<br>  fmt.Printf(\"Value %d Found\\n\", 6)<br> }<br> err = tree.find(5)<br> if err != nil {<br>  fmt.Printf(\"Value %d Not Found\\n\", 5)<br> } else {<br>  fmt.Printf(\"Value %d Found\\n\", 5)<br> }<br> err = tree.find(1)<br> if err != nil {<br>  fmt.Printf(\"Value %d Not Found\\n\", 1)<br> } else {<br>  fmt.Printf(\"Value %d Found\\n\", 1)<br> }<br>}</pre>\n<p>Output:</p>\n<pre>printing inorder<br>2<br>4<br>5<br>5<br>6<br>7<br>8<br>8<br><br>Printing Inorder:<br>-1<br>4<br>5<br>5<br>6<br>7<br>99<br><br>Finding Values:<br>Value 2 Not Found<br>Value 6 Found<br>Value 5 Found<br>Value 1 Not Found</pre>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=ba61b242f63f\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<pre>package main</pre>\n<pre>import (<br> \"fmt\"<br>)</pre>\n<pre>type Node struct {<br> value int<br> left  *Node<br> right *Node<br>}<br>type Tree struct {<br> root *Node<br>}</pre>\n<pre>func (t *Tree) reset() {<br> t.root = nil<br>}<br>func (t *Tree) insert(value int) {<br> t.insertRec(t.root, value)<br>}<br>func (t *Tree) insertRec(node *Node, value int) *Node {<br> if t.root == nil {<br>  t.root = &amp;Node{<br>   value: value,<br>  }<br>  return t.root<br> }<br> if node == nil {<br>  return &amp;Node{value: value}<br> }<br> if value &lt;= node.value {<br>  node.left = t.insertRec(node.left, value)<br> }<br> if value &gt; node.value {<br>  node.right = t.insertRec(node.right, value)<br> }<br> return node</pre>\n<pre>}</pre>\n<pre>func (t *Tree) find(value int) error {<br> node := t.findRec(t.root, value)<br> if node == nil {<br>  return fmt.Errorf(\"Value %d not find in tree\", value)<br> }<br> return nil<br>}<br>func (t *Tree) findRec(node *Node, value int) *Node {<br> if node == nil {<br>  return nil<br> }<br> if node.value == value {<br>  return node<br> }<br> if value &lt; node.value {<br>  return t.findRec(node.left, value)<br> }<br> return t.findRec(node.right, value)<br>}<br>func (t *Tree) inorder() {<br> t.inorderRec(t.root)<br>}<br>func (t *Tree) inorderRec(node *Node) {<br> if node != nil {<br>  t.inorderRec(node.left)<br>  fmt.Println(node.value)<br>  t.inorderRec(node.right)<br><br> }<br>}<br>func main() {<br> tree := &amp;Tree{}<br> eg := []int{2, 4, 5, 6, 7, 8, 8, 5}<br> for _, val := range eg {<br>  tree.insert(val)<br> }<br> fmt.Println(\"printing inorder\")<br> tree.inorder()<br> tree.reset()<br> eg = []int{4, 5, 7, 6, -1, 99, 5}<br> for _, val := range eg {<br>  tree.insert(val)<br> }<br> fmt.Printf(\"\\nPrinting Inorder:\\n\")<br> tree.inorder()<br> fmt.Printf(\"\\nFinding Values:\\n\")<br> err := tree.find(2)<br> if err != nil {<br>  fmt.Printf(\"Value %d Not Found\\n\", 2)<br> } else {<br>  fmt.Printf(\"Value %d Found\\n\", 2)<br> }<br> err = tree.find(6)<br> if err != nil {<br>  fmt.Printf(\"Value %d Not Found\\n\", 6)<br> } else {<br>  fmt.Printf(\"Value %d Found\\n\", 6)<br> }<br> err = tree.find(5)<br> if err != nil {<br>  fmt.Printf(\"Value %d Not Found\\n\", 5)<br> } else {<br>  fmt.Printf(\"Value %d Found\\n\", 5)<br> }<br> err = tree.find(1)<br> if err != nil {<br>  fmt.Printf(\"Value %d Not Found\\n\", 1)<br> } else {<br>  fmt.Printf(\"Value %d Found\\n\", 1)<br> }<br>}</pre>\n<p>Output:</p>\n<pre>printing inorder<br>2<br>4<br>5<br>5<br>6<br>7<br>8<br>8<br><br>Printing Inorder:<br>-1<br>4<br>5<br>5<br>6<br>7<br>99<br><br>Finding Values:<br>Value 2 Not Found<br>Value 6 Found<br>Value 5 Found<br>Value 1 Not Found</pre>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=ba61b242f63f\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":["binary-tree","binary-search"]},{"title":"Circular Queue in Golang","pubDate":"2021-02-11 20:33:44","link":"https://akaleem306.medium.com/circular-queue-in-golang-ade13f4b4e06?source=rss-8ce4e10c19af------2","guid":"https://medium.com/p/ade13f4b4e06","author":"Ayesha Kaleem","thumbnail":"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=ade13f4b4e06","description":"\n<pre>type MyCircularQueue struct {<br>    queue []int<br>    k int<br>}</pre>\n<pre>func Constructor(k int) MyCircularQueue {<br>    return MyCircularQueue{<br>        queue: make([]int,0,k),<br>        k: k,<br>    }<br>}</pre>\n<pre>func (this *MyCircularQueue) EnQueue(value int) bool {<br>    if len(this.queue) == this.k{<br>        return false<br>    }<br>    this.queue = append(this.queue,value)<br>    return true<br>}</pre>\n<pre>func (this *MyCircularQueue) DeQueue() bool {<br>    if len(this.queue) == 0{<br>        return false<br>    }<br>    this.queue = this.queue[1:]<br>    return true<br>}</pre>\n<pre>func (this *MyCircularQueue) Front() int {<br>    if len(this.queue)==0{<br>        return -1<br>    }<br>    return this.queue[0]<br>}</pre>\n<pre>func (this *MyCircularQueue) Rear() int {<br>    if len(this.queue)==0{<br>        return -1<br>    }<br>    return this.queue[len(this.queue)-1]<br>}</pre>\n<pre>func (this *MyCircularQueue) IsEmpty() bool {<br>    return len(this.queue)==0<br>}</pre>\n<pre>func (this *MyCircularQueue) IsFull() bool {<br>    return len(this.queue) == this.k<br>}</pre>\n<pre>/**<br> * Your MyCircularQueue object will be instantiated and called as such:<br> * obj := Constructor(k);<br> * param_1 := obj.EnQueue(value);<br> * param_2 := obj.DeQueue();<br> * param_3 := obj.Front();<br> * param_4 := obj.Rear();<br> * param_5 := obj.IsEmpty();<br> * param_6 := obj.IsFull();<br> */</pre>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=ade13f4b4e06\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<pre>type MyCircularQueue struct {<br>    queue []int<br>    k int<br>}</pre>\n<pre>func Constructor(k int) MyCircularQueue {<br>    return MyCircularQueue{<br>        queue: make([]int,0,k),<br>        k: k,<br>    }<br>}</pre>\n<pre>func (this *MyCircularQueue) EnQueue(value int) bool {<br>    if len(this.queue) == this.k{<br>        return false<br>    }<br>    this.queue = append(this.queue,value)<br>    return true<br>}</pre>\n<pre>func (this *MyCircularQueue) DeQueue() bool {<br>    if len(this.queue) == 0{<br>        return false<br>    }<br>    this.queue = this.queue[1:]<br>    return true<br>}</pre>\n<pre>func (this *MyCircularQueue) Front() int {<br>    if len(this.queue)==0{<br>        return -1<br>    }<br>    return this.queue[0]<br>}</pre>\n<pre>func (this *MyCircularQueue) Rear() int {<br>    if len(this.queue)==0{<br>        return -1<br>    }<br>    return this.queue[len(this.queue)-1]<br>}</pre>\n<pre>func (this *MyCircularQueue) IsEmpty() bool {<br>    return len(this.queue)==0<br>}</pre>\n<pre>func (this *MyCircularQueue) IsFull() bool {<br>    return len(this.queue) == this.k<br>}</pre>\n<pre>/**<br> * Your MyCircularQueue object will be instantiated and called as such:<br> * obj := Constructor(k);<br> * param_1 := obj.EnQueue(value);<br> * param_2 := obj.DeQueue();<br> * param_3 := obj.Front();<br> * param_4 := obj.Rear();<br> * param_5 := obj.IsEmpty();<br> * param_6 := obj.IsFull();<br> */</pre>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=ade13f4b4e06\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":["queue","golang","datastrucutre"]},{"title":"20. Valid Parentheses (CodeLeet) Golang","pubDate":"2021-02-10 13:33:49","link":"https://akaleem306.medium.com/20-valid-parentheses-codeleet-golang-54f8ec94030e?source=rss-8ce4e10c19af------2","guid":"https://medium.com/p/54f8ec94030e","author":"Ayesha Kaleem","thumbnail":"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=54f8ec94030e","description":"\n<h3>20. Valid Parentheses (LeetCode) Golang</h3>\n<pre>func isValid(str string) bool {<br>    var s []byte<br><br>    if str[0] == '(' || str[0]=='{' || str[0]=='['{<br><br>        for i:=0; i&lt;len(str); i++{<br>            s = append(s, str[i])<br>            if len(s) &gt; 1{<br>                if s[len(s)-2]=='[' &amp;&amp; s[len(s)-1] == ']'{<br>                    s = s[:len(s)-2]<br>                } else if s[len(s)-2]=='{' &amp;&amp; s[len(s)-1] == '}'{<br>                    s = s[:len(s)-2]<br>                }else if s[len(s)-2]=='(' &amp;&amp; s[len(s)-1] == ')'{<br>                    s = s[:len(s)-2]<br>                }        <br>        }    <br>    }<br>    if len(s) == 0{<br>        return true<br>    }      <br>}<br>    return false<br>}<br></pre>\n<p><strong>Success </strong><a href=\"https://leetcode.com/submissions/detail/454435933/\">Details</a></p>\n<pre>Runtime: 0 ms, faster than 100.00% of Go online submissions for Valid Parentheses.</pre>\n<pre>Memory Usage: 2 MB, less than 98.89% of Go online submissions for Valid Parentheses.</pre>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=54f8ec94030e\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<h3>20. Valid Parentheses (LeetCode) Golang</h3>\n<pre>func isValid(str string) bool {<br>    var s []byte<br><br>    if str[0] == '(' || str[0]=='{' || str[0]=='['{<br><br>        for i:=0; i&lt;len(str); i++{<br>            s = append(s, str[i])<br>            if len(s) &gt; 1{<br>                if s[len(s)-2]=='[' &amp;&amp; s[len(s)-1] == ']'{<br>                    s = s[:len(s)-2]<br>                } else if s[len(s)-2]=='{' &amp;&amp; s[len(s)-1] == '}'{<br>                    s = s[:len(s)-2]<br>                }else if s[len(s)-2]=='(' &amp;&amp; s[len(s)-1] == ')'{<br>                    s = s[:len(s)-2]<br>                }        <br>        }    <br>    }<br>    if len(s) == 0{<br>        return true<br>    }      <br>}<br>    return false<br>}<br></pre>\n<p><strong>Success </strong><a href=\"https://leetcode.com/submissions/detail/454435933/\">Details</a></p>\n<pre>Runtime: 0 ms, faster than 100.00% of Go online submissions for Valid Parentheses.</pre>\n<pre>Memory Usage: 2 MB, less than 98.89% of Go online submissions for Valid Parentheses.</pre>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=54f8ec94030e\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":["stack","golang","code"]},{"title":"When Cycling is Life","pubDate":"2020-02-10 18:37:30","link":"https://akaleem306.medium.com/when-cycling-is-life-e731bba4f13c?source=rss-8ce4e10c19af------2","guid":"https://medium.com/p/e731bba4f13c","author":"Ayesha Kaleem","thumbnail":"https://cdn-images-1.medium.com/max/1024/1*ZAVHAZMuSDjUvz8Xz__QoA.jpeg","description":"\n<p>I have started cycling about a year ago with <a href=\"https://www.facebook.cohttps//www.facebook.com/GGRidersKarachi/m/GGRidersKarachi/\">GG Riders</a> and from then, I am really fond of it not only because I enjoy it but because I get a chance to meet experienced people from different background and I always get a chance to learn from them. I don\u2019t need to explain that how much cycling is beneficial for health but the purpose of writing this blog is to encourage people to get up from your couch and get ready to ride a bicycle with the amazing group on every Sunday. Joining ride with the group not only help you to get fit but also allows you to make contacts and get socialize with other\u00a0people.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*ZAVHAZMuSDjUvz8Xz__QoA.jpeg\"></figure><p>As a young professional, I always like to meet with different people from different backgrounds and I always like a company of older people who has more experience than me and who are more mature than me so that I can learn from them about life, health and career while riding a bicycle and no doubt the GGRiders cycling group is full of inspiring and energetic people. I also have a beautiful Pink Suitto Giant which is really close to my\u00a0heart.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*9-kTI2vAhZ51i5K1wGHf2Q.jpeg\"></figure><p>\u201cGG Riders\u201d is a cycling club founded by <a href=\"https://www.facebook.com/itratullah\">Mohammed Itratullah</a> and some enthusiast from Gulshan-e-Iqbal and Gulistan-e-Johar in the city of Karachi in September 2018 and currently Abdul Basit and Hamza are the admins of the group to volunteer, help out and train new bees to ride a bike. GG Riders welcomes cyclists with a common interest from all ages, sect, religion, gender, race, caste, colour or political views. They encourage cyclists from Gulshan and surrounding areas to participate in our regular joyful rides. There is no official, membership just shows up on our scheduled rides, says \u201chello\u201d and become a part of the family of GG\u00a0Riders.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Kzoe7jTsnwhU3NztKOKWkw.jpeg\"></figure><p>I encourage people to join ride with any group in your area not only because to enjoy, release stress and get fit but to interact with other amazing people and learn from them. I also recommend riding a bicycle in your universities and in daily routine as cyclists are always looking\u00a0cool.</p>\n<p>*Join GGRiders:*</p>\n<p>Join \u201c*WhatsApp*\u201d group of <a href=\"https://www.facebook.com/hashtag/ggriders?source=feed_text&amp;epa=HASHTAG&amp;__xts__%5B0%5D=68.ARAztHM4i_ZEDyEgyV0OArS59hArnEoRsuXidHKVhSXxim1K3hyi3jiF7AVJSV5cDfGf2vgKFuOpBdG43NznbB_7OQmbqSmB0CNEsQXAoR7UPWPMhQEjRCQxrN49b3OGyFbO8Vx3vBmSLKxyIbSW5XVi-RAdPJa1bHnPZwRa-YfLfyTSkW-aiqESFibJ2YX13r8DqPmZm6BXVGd91mJaSFXsE7TpAcll0-XhfyPu4afjGuXbod1wnvzo5oMZVbsbOSTo9uqz_gLIZxFY-RliEirFwxQY9S4bnXYZUK2JzhATFJS3_CXTdXPsb2TpDOSAZp_x78wqPke5tBEm6m3zFS4&amp;__tn__=%2ANK-R\">#GGRiders</a> today and never miss another exciting ride: <a href=\"https://chat.whatsapp.com/KgYSY9T00A77pza8HfObfL\">https://chat.whatsapp.com/KgYSY9T00A77pza8HfObfL</a></p>\n<p>If you haven\u2019t joined their Facebook group yet, then please click on the link below to *request now*:<br>https://www.facebook.com/groups/GGRiders/</p>\n<p>Stay up-to-date with the latest happening:<br><a href=\"https://www.facebook.com/GGRidersKarachi/\">https://www.facebook.com/GGRidersKarachi/</a></p>\n<p>To *learn* cycling join GGRiders Academy at <a href=\"http://facebook.com/GGRidersAcademy\">http://Facebook.com/GGRidersAcademy</a></p>\n<p>*Follow* #GGRiders on Instagram at <a href=\"https://instagram.com/gg.riders\">https://instagram.com/gg.riders</a></p>\n<p>Join us on *Strava*: <a href=\"https://www.strava.com/clubs/GGRiders\">https://www.strava.com/clubs/GGRiders</a></p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=e731bba4f13c\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<p>I have started cycling about a year ago with <a href=\"https://www.facebook.cohttps//www.facebook.com/GGRidersKarachi/m/GGRidersKarachi/\">GG Riders</a> and from then, I am really fond of it not only because I enjoy it but because I get a chance to meet experienced people from different background and I always get a chance to learn from them. I don\u2019t need to explain that how much cycling is beneficial for health but the purpose of writing this blog is to encourage people to get up from your couch and get ready to ride a bicycle with the amazing group on every Sunday. Joining ride with the group not only help you to get fit but also allows you to make contacts and get socialize with other\u00a0people.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*ZAVHAZMuSDjUvz8Xz__QoA.jpeg\"></figure><p>As a young professional, I always like to meet with different people from different backgrounds and I always like a company of older people who has more experience than me and who are more mature than me so that I can learn from them about life, health and career while riding a bicycle and no doubt the GGRiders cycling group is full of inspiring and energetic people. I also have a beautiful Pink Suitto Giant which is really close to my\u00a0heart.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*9-kTI2vAhZ51i5K1wGHf2Q.jpeg\"></figure><p>\u201cGG Riders\u201d is a cycling club founded by <a href=\"https://www.facebook.com/itratullah\">Mohammed Itratullah</a> and some enthusiast from Gulshan-e-Iqbal and Gulistan-e-Johar in the city of Karachi in September 2018 and currently Abdul Basit and Hamza are the admins of the group to volunteer, help out and train new bees to ride a bike. GG Riders welcomes cyclists with a common interest from all ages, sect, religion, gender, race, caste, colour or political views. They encourage cyclists from Gulshan and surrounding areas to participate in our regular joyful rides. There is no official, membership just shows up on our scheduled rides, says \u201chello\u201d and become a part of the family of GG\u00a0Riders.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Kzoe7jTsnwhU3NztKOKWkw.jpeg\"></figure><p>I encourage people to join ride with any group in your area not only because to enjoy, release stress and get fit but to interact with other amazing people and learn from them. I also recommend riding a bicycle in your universities and in daily routine as cyclists are always looking\u00a0cool.</p>\n<p>*Join GGRiders:*</p>\n<p>Join \u201c*WhatsApp*\u201d group of <a href=\"https://www.facebook.com/hashtag/ggriders?source=feed_text&amp;epa=HASHTAG&amp;__xts__%5B0%5D=68.ARAztHM4i_ZEDyEgyV0OArS59hArnEoRsuXidHKVhSXxim1K3hyi3jiF7AVJSV5cDfGf2vgKFuOpBdG43NznbB_7OQmbqSmB0CNEsQXAoR7UPWPMhQEjRCQxrN49b3OGyFbO8Vx3vBmSLKxyIbSW5XVi-RAdPJa1bHnPZwRa-YfLfyTSkW-aiqESFibJ2YX13r8DqPmZm6BXVGd91mJaSFXsE7TpAcll0-XhfyPu4afjGuXbod1wnvzo5oMZVbsbOSTo9uqz_gLIZxFY-RliEirFwxQY9S4bnXYZUK2JzhATFJS3_CXTdXPsb2TpDOSAZp_x78wqPke5tBEm6m3zFS4&amp;__tn__=%2ANK-R\">#GGRiders</a> today and never miss another exciting ride: <a href=\"https://chat.whatsapp.com/KgYSY9T00A77pza8HfObfL\">https://chat.whatsapp.com/KgYSY9T00A77pza8HfObfL</a></p>\n<p>If you haven\u2019t joined their Facebook group yet, then please click on the link below to *request now*:<br>https://www.facebook.com/groups/GGRiders/</p>\n<p>Stay up-to-date with the latest happening:<br><a href=\"https://www.facebook.com/GGRidersKarachi/\">https://www.facebook.com/GGRidersKarachi/</a></p>\n<p>To *learn* cycling join GGRiders Academy at <a href=\"http://facebook.com/GGRidersAcademy\">http://Facebook.com/GGRidersAcademy</a></p>\n<p>*Follow* #GGRiders on Instagram at <a href=\"https://instagram.com/gg.riders\">https://instagram.com/gg.riders</a></p>\n<p>Join us on *Strava*: <a href=\"https://www.strava.com/clubs/GGRiders\">https://www.strava.com/clubs/GGRiders</a></p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=e731bba4f13c\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":[]},{"title":"Dockerize and Deploy Simple Chat App by using Kubernetes","pubDate":"2019-11-22 12:56:23","link":"https://akaleem306.medium.com/dockerize-and-deploy-simple-chat-app-by-using-kubernetes-672341b0c30f?source=rss-8ce4e10c19af------2","guid":"https://medium.com/p/672341b0c30f","author":"Ayesha Kaleem","thumbnail":"https://cdn-images-1.medium.com/max/800/1*pXxb8eXu71xUFpCsKxx1Mw.jpeg","description":"\n<h3>Dockerize and Deploy Simple Golang Chat App by using Kubernetes</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/800/1*pXxb8eXu71xUFpCsKxx1Mw.jpeg\"></figure><p>Clone the application, make it dockerized and orchestrate it through Kubernetes</p>\n<p>Clone the simple golang+vue.js chat web application.</p>\n<pre>git clone git@github.com:ayesha54/Chat-application.git<br>cd Chat-application<br>touch Dockerfile<br>subl Dockerfile</pre>\n<p>I am using sublime text editor, you can use any other in which you are comfortable with.</p>\n<p>Dockerfile</p>\n<pre># Dockerfile References: https://docs.docker.com/engine/reference/builder/</pre>\n<pre># Start from the latest golang base image<br>FROM golang:latest</pre>\n<pre># Add Maintainer Info<br>LABEL maintainer=\"Ayesha Kaleem\"</pre>\n<pre># Set the Current Working Directory inside the container<br>WORKDIR /app</pre>\n<pre># Copy go mod and sum files<br>COPY go.mod go.sum ./</pre>\n<pre># Download all dependencies. Dependencies will be cached if the go.mod and go.sum files are not changed<br>RUN go mod download</pre>\n<pre># Copy the source from the current directory to the Working Directory inside the container<br>COPY . .</pre>\n<pre># Build the Go app<br>RUN go build -o main .</pre>\n<pre># This container exposes port 8000 to the outside world<br>EXPOSE 8000</pre>\n<pre># Run the binary program produced by `go install`<br>CMD [\"./main\"]</pre>\n<p>Now, build the image of a docker file, login at docker.io and push it on to docker registry which is docker\u00a0hub.</p>\n<pre>docker build . -t your-name/chat-application <br>docker images<br>docker login docker.io</pre>\n<p>Make repo on docker hub and rename the image according to the docker\u00a0hub</p>\n<pre>docker tag your-name/chat-application your-dockerhubUserName/repoName <br>docker push your-dockerhubUserName/repoName</pre>\n<p>Your image is ready at docker hub \u2764 your-dockerhubUserName/repoName = image_name</p>\n<p>OR</p>\n<p>Directly pull the\u00a0image:</p>\n<p>docker pull ayesha306/chat-app</p>\n<p>Now, let's play with Kubernetes. For this, we use minikube\u00a0locally</p>\n<pre>minikube start<br>kubectl run chat-app --image=ayesha306/chat-app --port=8000<br>kubectl get deploy<br>kubectl get po</pre>\n<p>Now expose application service,</p>\n<pre>kubectl expose deploy chat-app --type=NodePort --port=8000<br>kubectl get services<br>minikube service chat-app --url</pre>\n<p>open the URL in the browser, for example, <a href=\"http://192.168.64.3:30936/\">http://192.168.64.3:30936</a></p>\n<p>Now, Scale the application</p>\n<pre>kubectl scale --replicas=4 deployment/chat-app<br>kubectl get all</pre>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=672341b0c30f\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<h3>Dockerize and Deploy Simple Golang Chat App by using Kubernetes</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/800/1*pXxb8eXu71xUFpCsKxx1Mw.jpeg\"></figure><p>Clone the application, make it dockerized and orchestrate it through Kubernetes</p>\n<p>Clone the simple golang+vue.js chat web application.</p>\n<pre>git clone git@github.com:ayesha54/Chat-application.git<br>cd Chat-application<br>touch Dockerfile<br>subl Dockerfile</pre>\n<p>I am using sublime text editor, you can use any other in which you are comfortable with.</p>\n<p>Dockerfile</p>\n<pre># Dockerfile References: https://docs.docker.com/engine/reference/builder/</pre>\n<pre># Start from the latest golang base image<br>FROM golang:latest</pre>\n<pre># Add Maintainer Info<br>LABEL maintainer=\"Ayesha Kaleem\"</pre>\n<pre># Set the Current Working Directory inside the container<br>WORKDIR /app</pre>\n<pre># Copy go mod and sum files<br>COPY go.mod go.sum ./</pre>\n<pre># Download all dependencies. Dependencies will be cached if the go.mod and go.sum files are not changed<br>RUN go mod download</pre>\n<pre># Copy the source from the current directory to the Working Directory inside the container<br>COPY . .</pre>\n<pre># Build the Go app<br>RUN go build -o main .</pre>\n<pre># This container exposes port 8000 to the outside world<br>EXPOSE 8000</pre>\n<pre># Run the binary program produced by `go install`<br>CMD [\"./main\"]</pre>\n<p>Now, build the image of a docker file, login at docker.io and push it on to docker registry which is docker\u00a0hub.</p>\n<pre>docker build . -t your-name/chat-application <br>docker images<br>docker login docker.io</pre>\n<p>Make repo on docker hub and rename the image according to the docker\u00a0hub</p>\n<pre>docker tag your-name/chat-application your-dockerhubUserName/repoName <br>docker push your-dockerhubUserName/repoName</pre>\n<p>Your image is ready at docker hub \u2764 your-dockerhubUserName/repoName = image_name</p>\n<p>OR</p>\n<p>Directly pull the\u00a0image:</p>\n<p>docker pull ayesha306/chat-app</p>\n<p>Now, let's play with Kubernetes. For this, we use minikube\u00a0locally</p>\n<pre>minikube start<br>kubectl run chat-app --image=ayesha306/chat-app --port=8000<br>kubectl get deploy<br>kubectl get po</pre>\n<p>Now expose application service,</p>\n<pre>kubectl expose deploy chat-app --type=NodePort --port=8000<br>kubectl get services<br>minikube service chat-app --url</pre>\n<p>open the URL in the browser, for example, <a href=\"http://192.168.64.3:30936/\">http://192.168.64.3:30936</a></p>\n<p>Now, Scale the application</p>\n<pre>kubectl scale --replicas=4 deployment/chat-app<br>kubectl get all</pre>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=672341b0c30f\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":["scalability","golang","kubernetes","chatting-app","docker"]},{"title":"ConfigMaps in Kubernetes","pubDate":"2019-11-18 07:40:26","link":"https://akaleem306.medium.com/configmaps-in-kubernetes-b86fc82d34a6?source=rss-8ce4e10c19af------2","guid":"https://medium.com/p/b86fc82d34a6","author":"Ayesha Kaleem","thumbnail":"https://cdn-images-1.medium.com/max/850/1*jOosFB_jp9B8Ftsi4khx9Q.jpeg","description":"\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/850/1*jOosFB_jp9B8Ftsi4khx9Q.jpeg\"></figure><p>ConfigMaps plays an important role in managing the environment variables between pods in Kubernetes. When we have many pod definition files so it is very difficult to manage the environment variables and its values. So, we create a config map definition file to define the variables in the form of key-value pair and inject those environment variables into the pod definition files and manage it centrally using Configuration Maps. We have two kinds of approaches to create config maps i.e. Imperative and declarative approach.</p>\n<pre>kubectl create configmap #Imperative</pre>\n<pre>kubectl create -f #Declarative</pre>\n<p>Just like any other Kubernetes objects, there are two ways of creating a ConfigMap. The imperative way\u200a\u2014\u200awithout using a ConfigMap definition file and the Declarative way by using a ConfigMap Definition file. If you do not wish to create a config map definition, you could simply use the kubectl create configmap command and specify the required arguments. Let\u2019s take a look at that first. With this method, you can directly specify the key-value pairs in the command line. To create a configMap of the given values, run the kubectl create configmap command.</p>\n<p><strong>Create Configmaps</strong></p>\n<p>ConfigMap</p>\n<pre>APP_COLOR: blue </pre>\n<pre>APP_MODE: prod</pre>\n<p>Imperative Approach</p>\n<pre><strong>kubectl create configmap &lt;config-name&gt; --from-literal=&lt;key&gt;=&lt;value&gt;</strong></pre>\n<pre>kubectl create configmap app-config --from-literal=APP_COLOR=blue<br>--from-literal=APP_MOD=prod<br><br><strong>kubectl create configmap &lt;config-name&gt; --from-file=&lt;path-to-file&gt;</strong></pre>\n<pre>kubectl create configmap app-config --from-file=app_config.properties</pre>\n<p>The command is followed by the config name and the option \u2013from-literal. The from-literal option is used to specify the key-value pairs in the command itself. In this example, we are creating a configmap by the name app-config, with a key-value pair APP_COLOR=blue. If you wish to add additional key-value pairs, simply specify the from literal options multiple times. However, this will get complicated when you have too many configuration items. Another way to input the configuration data is through a file. Use the \u2013from-file option to specify a path to the file that contains the required data. The data from this file is read and stored under the name of the\u00a0file</p>\n<p><strong>Declarative Approach</strong>: kubectl create \u2013f<br>config-map.yaml</p>\n<pre>#config-map.yaml</pre>\n<pre>apiVersion: v1<br>kind: ConfigMap<br>metadata:<br>    name: app-config<br>data:<br>    APP_COLOR: blue<br>    APP_MODE: prod</pre>\n<p><strong>kubectl create \u2013f config-map.yaml</strong></p>\n<p>Let us now look at the declarative approach. For this, we create a definition file, just like how we did for the pod. The file has apiVersion, kind, metadata and instead of spec, here we have \u201cdata\u201d. The apiVersion is v1, kind is ConfigMap. Under metadata specify the name of the configmap. We will call it app-config. Under data add the configuration data in a key-value format. Run the kubectl create command and specify the configuration file\u00a0name.</p>\n<p>So that creates the app-config config map with the values we specified. You can create as many configmaps as you need in the same way for various different purposes. Here I have one for my application, other for mysql and another one for redis. So it is important to name the config maps appropriately as you will be using these names later while associating it with\u00a0PODs.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*CJu1aPZyQ9NwNUWKngVOew.png\"></figure><p><strong>View ConfigMaps</strong></p>\n<pre>kubectl get configmaps</pre>\n<pre>kubectl describe configmaps</pre>\n<h3><strong>ConfigMap in\u00a0Pods</strong></h3>\n<p>Now that we have the configmap created to let us proceed with Step 2\u200a\u2014\u200aConfiguring it with a POD. Here I have a simple pod definition file that runs my application simple web application.</p>\n<p>To inject an environment variable, add a new property to the container called envFrom. The envFrom property is a list, so we can pass as many environment variables as required. Each item in the list corresponds to a configMap item. Specify the name of the configmap we created earlier. This is how we inject a specific configmap from the ones we created before. Creating the pod definition file now creates a web application with a blue background.</p>\n<pre># pod-definition.yaml</pre>\n<pre>apiVersion: v1<br>kind: Pod<br>metadata:<br>   name: simple-webapp-color<br>   labels:<br>      name: simple-webapp-color<br>spec:<br>  containers:<br>   - name: simple-webapp-color<br>     image: simple-webapp-color<br>     ports:<br>       - containerPort: 8080<br>     envFrom:<br>       - configMapRef:<br>            name: app-config # name taken from the congig-map.yaml</pre>\n<p>Run the following command to create the\u00a0pod:</p>\n<pre>kubectl create \u2013f pod-definition.yaml</pre>\n<p>What we just saw was using configMaps to inject environment variables. There are other ways to inject configuration data into PODs. You can inject a single environment variable or inject the whole configuration data as files in a\u00a0volume</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/710/1*vWUe1tTzh-LiI5kvDuZZSw.png\"></figure><p><strong>CheatSheet of ConfigMaps:</strong></p>\n<pre>$ kubectl get cm<br>$ kubectl get cm --all -namespaces<br>$ kubectl get cm --all -namespaces -o yaml</pre>\n<p><strong>References:</strong></p>\n<p><a href=\"https://kubernetes.io/docs/tasks/configure-pod-container/configure-podconfigmap/\">https://kubernetes.io/docs/tasks/configure-pod-container/configure-podconfigmap/</a></p>\n<p><a href=\"https://kubernetes.io/docs/tutorials/configuration/\">https://kubernetes.io/docs/tutorials/configuration/</a></p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=b86fc82d34a6\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/850/1*jOosFB_jp9B8Ftsi4khx9Q.jpeg\"></figure><p>ConfigMaps plays an important role in managing the environment variables between pods in Kubernetes. When we have many pod definition files so it is very difficult to manage the environment variables and its values. So, we create a config map definition file to define the variables in the form of key-value pair and inject those environment variables into the pod definition files and manage it centrally using Configuration Maps. We have two kinds of approaches to create config maps i.e. Imperative and declarative approach.</p>\n<pre>kubectl create configmap #Imperative</pre>\n<pre>kubectl create -f #Declarative</pre>\n<p>Just like any other Kubernetes objects, there are two ways of creating a ConfigMap. The imperative way\u200a\u2014\u200awithout using a ConfigMap definition file and the Declarative way by using a ConfigMap Definition file. If you do not wish to create a config map definition, you could simply use the kubectl create configmap command and specify the required arguments. Let\u2019s take a look at that first. With this method, you can directly specify the key-value pairs in the command line. To create a configMap of the given values, run the kubectl create configmap command.</p>\n<p><strong>Create Configmaps</strong></p>\n<p>ConfigMap</p>\n<pre>APP_COLOR: blue </pre>\n<pre>APP_MODE: prod</pre>\n<p>Imperative Approach</p>\n<pre><strong>kubectl create configmap &lt;config-name&gt; --from-literal=&lt;key&gt;=&lt;value&gt;</strong></pre>\n<pre>kubectl create configmap app-config --from-literal=APP_COLOR=blue<br>--from-literal=APP_MOD=prod<br><br><strong>kubectl create configmap &lt;config-name&gt; --from-file=&lt;path-to-file&gt;</strong></pre>\n<pre>kubectl create configmap app-config --from-file=app_config.properties</pre>\n<p>The command is followed by the config name and the option \u2013from-literal. The from-literal option is used to specify the key-value pairs in the command itself. In this example, we are creating a configmap by the name app-config, with a key-value pair APP_COLOR=blue. If you wish to add additional key-value pairs, simply specify the from literal options multiple times. However, this will get complicated when you have too many configuration items. Another way to input the configuration data is through a file. Use the \u2013from-file option to specify a path to the file that contains the required data. The data from this file is read and stored under the name of the\u00a0file</p>\n<p><strong>Declarative Approach</strong>: kubectl create \u2013f<br>config-map.yaml</p>\n<pre>#config-map.yaml</pre>\n<pre>apiVersion: v1<br>kind: ConfigMap<br>metadata:<br>    name: app-config<br>data:<br>    APP_COLOR: blue<br>    APP_MODE: prod</pre>\n<p><strong>kubectl create \u2013f config-map.yaml</strong></p>\n<p>Let us now look at the declarative approach. For this, we create a definition file, just like how we did for the pod. The file has apiVersion, kind, metadata and instead of spec, here we have \u201cdata\u201d. The apiVersion is v1, kind is ConfigMap. Under metadata specify the name of the configmap. We will call it app-config. Under data add the configuration data in a key-value format. Run the kubectl create command and specify the configuration file\u00a0name.</p>\n<p>So that creates the app-config config map with the values we specified. You can create as many configmaps as you need in the same way for various different purposes. Here I have one for my application, other for mysql and another one for redis. So it is important to name the config maps appropriately as you will be using these names later while associating it with\u00a0PODs.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*CJu1aPZyQ9NwNUWKngVOew.png\"></figure><p><strong>View ConfigMaps</strong></p>\n<pre>kubectl get configmaps</pre>\n<pre>kubectl describe configmaps</pre>\n<h3><strong>ConfigMap in\u00a0Pods</strong></h3>\n<p>Now that we have the configmap created to let us proceed with Step 2\u200a\u2014\u200aConfiguring it with a POD. Here I have a simple pod definition file that runs my application simple web application.</p>\n<p>To inject an environment variable, add a new property to the container called envFrom. The envFrom property is a list, so we can pass as many environment variables as required. Each item in the list corresponds to a configMap item. Specify the name of the configmap we created earlier. This is how we inject a specific configmap from the ones we created before. Creating the pod definition file now creates a web application with a blue background.</p>\n<pre># pod-definition.yaml</pre>\n<pre>apiVersion: v1<br>kind: Pod<br>metadata:<br>   name: simple-webapp-color<br>   labels:<br>      name: simple-webapp-color<br>spec:<br>  containers:<br>   - name: simple-webapp-color<br>     image: simple-webapp-color<br>     ports:<br>       - containerPort: 8080<br>     envFrom:<br>       - configMapRef:<br>            name: app-config # name taken from the congig-map.yaml</pre>\n<p>Run the following command to create the\u00a0pod:</p>\n<pre>kubectl create \u2013f pod-definition.yaml</pre>\n<p>What we just saw was using configMaps to inject environment variables. There are other ways to inject configuration data into PODs. You can inject a single environment variable or inject the whole configuration data as files in a\u00a0volume</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/710/1*vWUe1tTzh-LiI5kvDuZZSw.png\"></figure><p><strong>CheatSheet of ConfigMaps:</strong></p>\n<pre>$ kubectl get cm<br>$ kubectl get cm --all -namespaces<br>$ kubectl get cm --all -namespaces -o yaml</pre>\n<p><strong>References:</strong></p>\n<p><a href=\"https://kubernetes.io/docs/tasks/configure-pod-container/configure-podconfigmap/\">https://kubernetes.io/docs/tasks/configure-pod-container/configure-podconfigmap/</a></p>\n<p><a href=\"https://kubernetes.io/docs/tutorials/configuration/\">https://kubernetes.io/docs/tutorials/configuration/</a></p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=b86fc82d34a6\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":["kubernetes","configuration"]},{"title":"Deploying PHP Guestbook application with Redis\u200a\u2014\u200aKubernetes-minikube","pubDate":"2019-10-29 10:32:28","link":"https://akaleem306.medium.com/deploying-php-guestbook-application-with-redis-kubernetes-minikube-554ee0b786ff?source=rss-8ce4e10c19af------2","guid":"https://medium.com/p/554ee0b786ff","author":"Ayesha Kaleem","thumbnail":"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=554ee0b786ff","description":"\n<h3>Deploying PHP Guestbook application with Redis\u200a\u2014\u200aKubernetes-minikube</h3>\n<p>This tutorial shows you how to build and deploy a simple, multi-tier web application using Kubernetes and Docker. This example consists of the following components:</p>\n<p>A single-instance Redis master to store guestbook entries Multiple replicated Redis instances to serve reads Multiple web frontend instances</p>\n<h3>Objectives</h3>\n<p>Startup a Redis master. Startup, Redis slaves. Startup the guestbook frontend. Expose and view the Frontend Service. Clean\u00a0up.</p>\n<p>Before you begin, You need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your\u00a0cluster.</p>\n<p>To check the version, enter kubectl\u00a0version.</p>\n<pre>mkdir guestbook-deployment-kubernetes<br>cd guestbook-deployment-kubernetes<br>subl .</pre>\n<p>Now, create the deployments and services.</p>\n<p>Launch a terminal window in the directory you downloaded the manifest files. Create the Redis Master Deployment from the redis-master-deployment.yaml file:</p>\n<pre>apiVersion: apps/v1<br>kind: Deployment<br>metadata:<br>  name: redis-master<br>  labels:<br>    app: redis<br>spec:<br>  selector:<br>    matchLabels:<br>      app: redis<br>      role: master<br>      tier: backend<br>  replicas: 1<br>  template:<br>    metadata:<br>      labels:<br>        app: redis<br>        role: master<br>        tier: backend<br>    spec:<br>      containers:<br>        - name: master<br>          image: k8s.gcr.io/redis:e2e  # or just image: redis<br>          resources:<br>            requests:<br>              cpu: 100m<br>              memory: 100Mi<br>          ports:<br>            - containerPort: 6379</pre>\n<p>kubectl create -f redis-master-deployment.yaml Query the list of Pods to verify that the Redis Master Pod is\u00a0running:</p>\n<p>kubectl get\u00a0pods</p>\n<p>The response should be similar to\u00a0this:</p>\n<pre>NAME                            READY     STATUS    RESTARTS   AGE<br>  redis-master-1068406935-3lswp   1/1       Running   0          28s</pre>\n<p>Run the following command to view the logs from the Redis Master\u00a0Pod:</p>\n<p>kubectl logs -f\u00a0POD-NAME</p>\n<p>Note: Replace POD-NAME with the name of your\u00a0Pod.</p>\n<p>The guestbook applications need to communicate with the Redis master to write its\u00a0data.</p>\n<p>Create the Redis Master Service from the following redis-master-service.yaml file:</p>\n<pre>apiVersion: v1<br>kind: Service<br>metadata:<br>  name: redis-master<br>  labels:<br>    app: redis<br>    role: master<br>    tier: backend<br>spec:<br>  ports:<br>  - port: 6379<br>    targetPort: 6379<br>  selector:<br>    app: redis<br>    role: master<br>    tier: backend</pre>\n<p>kubectl create -f redis-master-service.yaml Query the list of Services to verify that the Redis Master Service is\u00a0running:</p>\n<p>kubectl get service The response should be similar to\u00a0this:</p>\n<pre>NAME           TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)    AGE<br>kubernetes     ClusterIP   10.0.0.1     &lt;none&gt;        443/TCP    1m<br>redis-master   ClusterIP   10.0.0.151   &lt;none&gt;        6379/TCP   8s</pre>\n<p>Note: This manifest file creates a Service named redis-master with a set of labels that match the labels previously defined, so the Service routes network traffic to the Redis master Pod. Start up the Redis Slaves Although the Redis master is a single pod, you can make it highly available to meet traffic demands by adding replica Redis\u00a0slaves.</p>\n<p>Creating the Redis Slave Deployment, Deployments scale based on the configurations set in the manifest file. In this case, the Deployment object specifies two replicas.</p>\n<p>If there are not any replicas running, this Deployment would start the two replicas on your container cluster. Conversely, if there are more than two replicas are running, it would scale down until two replicas are\u00a0running.</p>\n<p>Create the Redis Slave Deployment from the redis-slave-deployment.yaml file:</p>\n<pre>apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2<br>kind: Deployment<br>metadata:<br>  name: redis-slave<br>  labels:<br>    app: redis<br>spec:<br>  selector:<br>    matchLabels:<br>      app: redis<br>      role: slave<br>      tier: backend<br>  replicas: 2<br>  template:<br>    metadata:<br>      labels:<br>        app: redis<br>        role: slave<br>        tier: backend<br>    spec:<br>      containers:<br>      - name: slave<br>        image: gcr.io/google_samples/gb-redisslave:v3<br>        resources:<br>          requests:<br>            cpu: 100m<br>            memory: 100Mi<br>        env:<br>        - name: GET_HOSTS_FROM<br>          value: dns<br>        ports:<br>        - containerPort: 6379</pre>\n<p>kubectl create -f redis-slave-deployment.yaml Query the list of Pods to verify that the Redis Slave Pods are\u00a0running:</p>\n<p>kubectl get pods The response should be similar to\u00a0this:</p>\n<pre>NAME                            READY     STATUS              RESTARTS   AGE<br> redis-master-1068406935-3lswp   1/1       Running             0          1m<br> redis-slave-2005841000-fpvqc    0/1       ContainerCreating   0          6s<br> redis-slave-2005841000-phfv9    0/1       ContainerCreating   0          6s</pre>\n<p>Creating the Redis Slave Service The guestbook application needs to communicate to Redis slaves to read data. To make the Redis slaves discoverable, you need to set up a Service. A Service provides transparent load balancing to a set of\u00a0Pods.</p>\n<p>Create the Redis Slave Service from the following redis-slave-service.yaml file:</p>\n<pre>apiVersion: v1<br>kind: Service<br>metadata:<br>  name: redis-slave<br>  labels:<br>    app: redis<br>    role: slave<br>    tier: backend<br>spec:<br>  ports:<br>  - port: 6379<br>  selector:<br>    app: redis<br>    role: slave<br>    tier: backend</pre>\n<p>kubectl create -f redis-slave-service.yaml</p>\n<p>Query the list of Services to verify that the Redis slave service is\u00a0running:</p>\n<p>kubectl get\u00a0services</p>\n<p>The response should be similar to\u00a0this:</p>\n<pre>NAME           TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)    AGE<br>  kubernetes     ClusterIP   10.0.0.1     &lt;none&gt;        443/TCP    2m<br>  redis-master   ClusterIP   10.0.0.151   &lt;none&gt;        6379/TCP   1m<br>  redis-slave    ClusterIP   10.0.0.223   &lt;none&gt;        6379/TCP   6s</pre>\n<p>Set up and Expose the Guestbook Frontend</p>\n<p>create the frontend Deployment from the frontend-deployment.yaml file:</p>\n<pre>apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2<br>kind: Deployment<br>metadata:<br>  name: frontend<br>  labels:<br>    app: guestbook<br>spec:<br>  selector:<br>    matchLabels:<br>      app: guestbook<br>      tier: frontend<br>  replicas: 3<br>  template:<br>    metadata:<br>      labels:<br>        app: guestbook<br>        tier: frontend<br>    spec:<br>      containers:<br>      - name: php-redis<br>        image: gcr.io/google-samples/gb-frontend:v4<br>        resources:<br>          requests:<br>            cpu: 100m<br>            memory: 100Mi<br>        env:<br>        - name: GET_HOSTS_FROM<br>          value: dns<br>        ports:<br>        - containerPort: 80</pre>\n<p>kubectl create -f frontend-deployment.yaml</p>\n<p>Query the list of Pods to verify that the three frontend replicas are\u00a0running:</p>\n<p>kubectl get pods -l app=guestbook -l tier=frontend</p>\n<p>The response should be similar to\u00a0this:</p>\n<pre>NAME                        READY     STATUS    RESTARTS   AGE<br>  frontend-3823415956-dsvc5   1/1       Running   0          54s<br>  frontend-3823415956-k22zn   1/1       Running   0          54s<br>  frontend-3823415956-w9gbt   1/1       Running   0          54s</pre>\n<p>The redis-slave and redis-master Services you applied are only accessible within the container cluster because the default type for a Service is ClusterIP. ClusterIP provides a single IP address for the set of Pods the Service is pointing to. This IP address is accessible only within the\u00a0cluster.</p>\n<p>If you want guests to be able to access your guestbook, you must configure the frontend Service to be externally visible, so a client can request the Service from outside the container cluster. Minikube can only expose Services through NodePort. Create the frontend Service from the frontend-service.yaml file:</p>\n<pre>apiVersion: v1<br>kind: Service<br>metadata:<br>  name: frontend<br>  labels:<br>    app: guestbook<br>    tier: frontend<br>spec:<br>  type: NodePort<br>  ports:<br>  - port: 80<br>  selector:<br>    app: guestbook<br>    tier: frontend</pre>\n<p>kubectl create -f frontend-service.yaml</p>\n<p>Query the list of Services to verify that the frontend Service is\u00a0running:</p>\n<p>kubectl get\u00a0services</p>\n<p>The response should be similar to\u00a0this:</p>\n<pre>NAME           TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)        AGE<br>  frontend       NodePort    10.0.0.112   &lt;none&gt;       80:31323/TCP   6s<br>  kubernetes     ClusterIP   10.0.0.1     &lt;none&gt;        443/TCP        4m<br>  redis-master   ClusterIP   10.0.0.151   &lt;none&gt;        6379/TCP       2m<br>  redis-slave    ClusterIP   10.0.0.223   &lt;none&gt;        6379/TCP       1m</pre>\n<p>Viewing the Frontend Service via NodePort If you deployed this application to Minikube or a local cluster, you need to find the IP address to view your Guestbook.</p>\n<p>Run the following command to get the IP address for the frontend\u00a0Service.</p>\n<p>minikube service frontend --url The response should be similar to\u00a0this:</p>\n<p><a href=\"http://192.168.99.100:31323/\">http://192.168.99.100:31323</a></p>\n<p>Copy the IP address, and load the page in your browser to view your guestbook.</p>\n<p>Scale the Web Frontend Scaling up or down is easy because your servers are defined as a Service that uses a Deployment controller.</p>\n<p>Run the following command to scale up the number of frontend\u00a0Pods:</p>\n<p>kubectl scale deployment frontend --replicas=5 Query the list of Pods to verify the number of frontend Pods\u00a0running:</p>\n<p>kubectl get\u00a0pods</p>\n<p>The response should look similar to\u00a0this:</p>\n<pre>NAME                            READY     STATUS    RESTARTS   AGE<br>  frontend-3823415956-70qj5       1/1       Running   0          5s<br>  frontend-3823415956-dsvc5       1/1       Running   0          54m<br>  frontend-3823415956-k22zn       1/1       Running   0          54m<br>  frontend-3823415956-w9gbt       1/1       Running   0          54m<br>  frontend-3823415956-x2pld       1/1       Running   0          5s<br>  redis-master-1068406935-3lswp   1/1       Running   0          56m<br>  redis-slave-2005841000-fpvqc    1/1       Running   0          55m<br>  redis-slave-2005841000-phfv9    1/1       Running   0          55m</pre>\n<p>Run the following command to scale down the number of frontend\u00a0Pods:</p>\n<p>kubectl scale deployment frontend --replicas=2 Query the list of Pods to verify the number of frontend Pods\u00a0running:</p>\n<p>kubectl get pods The response should look similar to\u00a0this:</p>\n<pre>NAME                            READY     STATUS    RESTARTS   AGE<br>  frontend-3823415956-k22zn       1/1       Running   0          1h<br>  frontend-3823415956-w9gbt       1/1       Running   0          1h<br>  redis-master-1068406935-3lswp   1/1       Running   0          1h<br>  redis-slave-2005841000-fpvqc    1/1       Running   0          1h<br>  redis-slave-2005841000-phfv9    1/1       Running   0          1h</pre>\n<p>Cleaning up Deleting the Deployments and Services also deletes any running Pods. Use labels to delete multiple resources with one\u00a0command.</p>\n<p>Run the following commands to delete all Pods, Deployments, and Services.</p>\n<pre>  kubectl delete deployment -l app=redis<br>  kubectl delete service -l app=redis<br>  kubectl delete deployment -l app=guestbook<br>  kubectl delete service -l app=guestbook</pre>\n<p>The responses should\u00a0be:</p>\n<pre>  deployment.apps \"redis-master\" deleted<br>  deployment.apps \"redis-slave\" deleted<br>  service \"redis-master\" deleted<br>  service \"redis-slave\" deleted<br>  deployment.apps \"frontend\" deleted    <br>  service \"frontend\" deleted</pre>\n<p>Query the list of Pods to verify that no Pods are\u00a0running:</p>\n<p>kubectl get pods The response should be\u00a0this:</p>\n<p>No resources found.</p>\n<p><a href=\"https://github.com/ayesha54/guestbook-deployment-kubernetes\">GithubLink</a> Happy Deploying!</p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=554ee0b786ff\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<h3>Deploying PHP Guestbook application with Redis\u200a\u2014\u200aKubernetes-minikube</h3>\n<p>This tutorial shows you how to build and deploy a simple, multi-tier web application using Kubernetes and Docker. This example consists of the following components:</p>\n<p>A single-instance Redis master to store guestbook entries Multiple replicated Redis instances to serve reads Multiple web frontend instances</p>\n<h3>Objectives</h3>\n<p>Startup a Redis master. Startup, Redis slaves. Startup the guestbook frontend. Expose and view the Frontend Service. Clean\u00a0up.</p>\n<p>Before you begin, You need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your\u00a0cluster.</p>\n<p>To check the version, enter kubectl\u00a0version.</p>\n<pre>mkdir guestbook-deployment-kubernetes<br>cd guestbook-deployment-kubernetes<br>subl .</pre>\n<p>Now, create the deployments and services.</p>\n<p>Launch a terminal window in the directory you downloaded the manifest files. Create the Redis Master Deployment from the redis-master-deployment.yaml file:</p>\n<pre>apiVersion: apps/v1<br>kind: Deployment<br>metadata:<br>  name: redis-master<br>  labels:<br>    app: redis<br>spec:<br>  selector:<br>    matchLabels:<br>      app: redis<br>      role: master<br>      tier: backend<br>  replicas: 1<br>  template:<br>    metadata:<br>      labels:<br>        app: redis<br>        role: master<br>        tier: backend<br>    spec:<br>      containers:<br>        - name: master<br>          image: k8s.gcr.io/redis:e2e  # or just image: redis<br>          resources:<br>            requests:<br>              cpu: 100m<br>              memory: 100Mi<br>          ports:<br>            - containerPort: 6379</pre>\n<p>kubectl create -f redis-master-deployment.yaml Query the list of Pods to verify that the Redis Master Pod is\u00a0running:</p>\n<p>kubectl get\u00a0pods</p>\n<p>The response should be similar to\u00a0this:</p>\n<pre>NAME                            READY     STATUS    RESTARTS   AGE<br>  redis-master-1068406935-3lswp   1/1       Running   0          28s</pre>\n<p>Run the following command to view the logs from the Redis Master\u00a0Pod:</p>\n<p>kubectl logs -f\u00a0POD-NAME</p>\n<p>Note: Replace POD-NAME with the name of your\u00a0Pod.</p>\n<p>The guestbook applications need to communicate with the Redis master to write its\u00a0data.</p>\n<p>Create the Redis Master Service from the following redis-master-service.yaml file:</p>\n<pre>apiVersion: v1<br>kind: Service<br>metadata:<br>  name: redis-master<br>  labels:<br>    app: redis<br>    role: master<br>    tier: backend<br>spec:<br>  ports:<br>  - port: 6379<br>    targetPort: 6379<br>  selector:<br>    app: redis<br>    role: master<br>    tier: backend</pre>\n<p>kubectl create -f redis-master-service.yaml Query the list of Services to verify that the Redis Master Service is\u00a0running:</p>\n<p>kubectl get service The response should be similar to\u00a0this:</p>\n<pre>NAME           TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)    AGE<br>kubernetes     ClusterIP   10.0.0.1     &lt;none&gt;        443/TCP    1m<br>redis-master   ClusterIP   10.0.0.151   &lt;none&gt;        6379/TCP   8s</pre>\n<p>Note: This manifest file creates a Service named redis-master with a set of labels that match the labels previously defined, so the Service routes network traffic to the Redis master Pod. Start up the Redis Slaves Although the Redis master is a single pod, you can make it highly available to meet traffic demands by adding replica Redis\u00a0slaves.</p>\n<p>Creating the Redis Slave Deployment, Deployments scale based on the configurations set in the manifest file. In this case, the Deployment object specifies two replicas.</p>\n<p>If there are not any replicas running, this Deployment would start the two replicas on your container cluster. Conversely, if there are more than two replicas are running, it would scale down until two replicas are\u00a0running.</p>\n<p>Create the Redis Slave Deployment from the redis-slave-deployment.yaml file:</p>\n<pre>apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2<br>kind: Deployment<br>metadata:<br>  name: redis-slave<br>  labels:<br>    app: redis<br>spec:<br>  selector:<br>    matchLabels:<br>      app: redis<br>      role: slave<br>      tier: backend<br>  replicas: 2<br>  template:<br>    metadata:<br>      labels:<br>        app: redis<br>        role: slave<br>        tier: backend<br>    spec:<br>      containers:<br>      - name: slave<br>        image: gcr.io/google_samples/gb-redisslave:v3<br>        resources:<br>          requests:<br>            cpu: 100m<br>            memory: 100Mi<br>        env:<br>        - name: GET_HOSTS_FROM<br>          value: dns<br>        ports:<br>        - containerPort: 6379</pre>\n<p>kubectl create -f redis-slave-deployment.yaml Query the list of Pods to verify that the Redis Slave Pods are\u00a0running:</p>\n<p>kubectl get pods The response should be similar to\u00a0this:</p>\n<pre>NAME                            READY     STATUS              RESTARTS   AGE<br> redis-master-1068406935-3lswp   1/1       Running             0          1m<br> redis-slave-2005841000-fpvqc    0/1       ContainerCreating   0          6s<br> redis-slave-2005841000-phfv9    0/1       ContainerCreating   0          6s</pre>\n<p>Creating the Redis Slave Service The guestbook application needs to communicate to Redis slaves to read data. To make the Redis slaves discoverable, you need to set up a Service. A Service provides transparent load balancing to a set of\u00a0Pods.</p>\n<p>Create the Redis Slave Service from the following redis-slave-service.yaml file:</p>\n<pre>apiVersion: v1<br>kind: Service<br>metadata:<br>  name: redis-slave<br>  labels:<br>    app: redis<br>    role: slave<br>    tier: backend<br>spec:<br>  ports:<br>  - port: 6379<br>  selector:<br>    app: redis<br>    role: slave<br>    tier: backend</pre>\n<p>kubectl create -f redis-slave-service.yaml</p>\n<p>Query the list of Services to verify that the Redis slave service is\u00a0running:</p>\n<p>kubectl get\u00a0services</p>\n<p>The response should be similar to\u00a0this:</p>\n<pre>NAME           TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)    AGE<br>  kubernetes     ClusterIP   10.0.0.1     &lt;none&gt;        443/TCP    2m<br>  redis-master   ClusterIP   10.0.0.151   &lt;none&gt;        6379/TCP   1m<br>  redis-slave    ClusterIP   10.0.0.223   &lt;none&gt;        6379/TCP   6s</pre>\n<p>Set up and Expose the Guestbook Frontend</p>\n<p>create the frontend Deployment from the frontend-deployment.yaml file:</p>\n<pre>apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2<br>kind: Deployment<br>metadata:<br>  name: frontend<br>  labels:<br>    app: guestbook<br>spec:<br>  selector:<br>    matchLabels:<br>      app: guestbook<br>      tier: frontend<br>  replicas: 3<br>  template:<br>    metadata:<br>      labels:<br>        app: guestbook<br>        tier: frontend<br>    spec:<br>      containers:<br>      - name: php-redis<br>        image: gcr.io/google-samples/gb-frontend:v4<br>        resources:<br>          requests:<br>            cpu: 100m<br>            memory: 100Mi<br>        env:<br>        - name: GET_HOSTS_FROM<br>          value: dns<br>        ports:<br>        - containerPort: 80</pre>\n<p>kubectl create -f frontend-deployment.yaml</p>\n<p>Query the list of Pods to verify that the three frontend replicas are\u00a0running:</p>\n<p>kubectl get pods -l app=guestbook -l tier=frontend</p>\n<p>The response should be similar to\u00a0this:</p>\n<pre>NAME                        READY     STATUS    RESTARTS   AGE<br>  frontend-3823415956-dsvc5   1/1       Running   0          54s<br>  frontend-3823415956-k22zn   1/1       Running   0          54s<br>  frontend-3823415956-w9gbt   1/1       Running   0          54s</pre>\n<p>The redis-slave and redis-master Services you applied are only accessible within the container cluster because the default type for a Service is ClusterIP. ClusterIP provides a single IP address for the set of Pods the Service is pointing to. This IP address is accessible only within the\u00a0cluster.</p>\n<p>If you want guests to be able to access your guestbook, you must configure the frontend Service to be externally visible, so a client can request the Service from outside the container cluster. Minikube can only expose Services through NodePort. Create the frontend Service from the frontend-service.yaml file:</p>\n<pre>apiVersion: v1<br>kind: Service<br>metadata:<br>  name: frontend<br>  labels:<br>    app: guestbook<br>    tier: frontend<br>spec:<br>  type: NodePort<br>  ports:<br>  - port: 80<br>  selector:<br>    app: guestbook<br>    tier: frontend</pre>\n<p>kubectl create -f frontend-service.yaml</p>\n<p>Query the list of Services to verify that the frontend Service is\u00a0running:</p>\n<p>kubectl get\u00a0services</p>\n<p>The response should be similar to\u00a0this:</p>\n<pre>NAME           TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)        AGE<br>  frontend       NodePort    10.0.0.112   &lt;none&gt;       80:31323/TCP   6s<br>  kubernetes     ClusterIP   10.0.0.1     &lt;none&gt;        443/TCP        4m<br>  redis-master   ClusterIP   10.0.0.151   &lt;none&gt;        6379/TCP       2m<br>  redis-slave    ClusterIP   10.0.0.223   &lt;none&gt;        6379/TCP       1m</pre>\n<p>Viewing the Frontend Service via NodePort If you deployed this application to Minikube or a local cluster, you need to find the IP address to view your Guestbook.</p>\n<p>Run the following command to get the IP address for the frontend\u00a0Service.</p>\n<p>minikube service frontend --url The response should be similar to\u00a0this:</p>\n<p><a href=\"http://192.168.99.100:31323/\">http://192.168.99.100:31323</a></p>\n<p>Copy the IP address, and load the page in your browser to view your guestbook.</p>\n<p>Scale the Web Frontend Scaling up or down is easy because your servers are defined as a Service that uses a Deployment controller.</p>\n<p>Run the following command to scale up the number of frontend\u00a0Pods:</p>\n<p>kubectl scale deployment frontend --replicas=5 Query the list of Pods to verify the number of frontend Pods\u00a0running:</p>\n<p>kubectl get\u00a0pods</p>\n<p>The response should look similar to\u00a0this:</p>\n<pre>NAME                            READY     STATUS    RESTARTS   AGE<br>  frontend-3823415956-70qj5       1/1       Running   0          5s<br>  frontend-3823415956-dsvc5       1/1       Running   0          54m<br>  frontend-3823415956-k22zn       1/1       Running   0          54m<br>  frontend-3823415956-w9gbt       1/1       Running   0          54m<br>  frontend-3823415956-x2pld       1/1       Running   0          5s<br>  redis-master-1068406935-3lswp   1/1       Running   0          56m<br>  redis-slave-2005841000-fpvqc    1/1       Running   0          55m<br>  redis-slave-2005841000-phfv9    1/1       Running   0          55m</pre>\n<p>Run the following command to scale down the number of frontend\u00a0Pods:</p>\n<p>kubectl scale deployment frontend --replicas=2 Query the list of Pods to verify the number of frontend Pods\u00a0running:</p>\n<p>kubectl get pods The response should look similar to\u00a0this:</p>\n<pre>NAME                            READY     STATUS    RESTARTS   AGE<br>  frontend-3823415956-k22zn       1/1       Running   0          1h<br>  frontend-3823415956-w9gbt       1/1       Running   0          1h<br>  redis-master-1068406935-3lswp   1/1       Running   0          1h<br>  redis-slave-2005841000-fpvqc    1/1       Running   0          1h<br>  redis-slave-2005841000-phfv9    1/1       Running   0          1h</pre>\n<p>Cleaning up Deleting the Deployments and Services also deletes any running Pods. Use labels to delete multiple resources with one\u00a0command.</p>\n<p>Run the following commands to delete all Pods, Deployments, and Services.</p>\n<pre>  kubectl delete deployment -l app=redis<br>  kubectl delete service -l app=redis<br>  kubectl delete deployment -l app=guestbook<br>  kubectl delete service -l app=guestbook</pre>\n<p>The responses should\u00a0be:</p>\n<pre>  deployment.apps \"redis-master\" deleted<br>  deployment.apps \"redis-slave\" deleted<br>  service \"redis-master\" deleted<br>  service \"redis-slave\" deleted<br>  deployment.apps \"frontend\" deleted    <br>  service \"frontend\" deleted</pre>\n<p>Query the list of Pods to verify that no Pods are\u00a0running:</p>\n<p>kubectl get pods The response should be\u00a0this:</p>\n<p>No resources found.</p>\n<p><a href=\"https://github.com/ayesha54/guestbook-deployment-kubernetes\">GithubLink</a> Happy Deploying!</p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=554ee0b786ff\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":["kubernetes","deployment","example","guestbook","minikube"]}]}